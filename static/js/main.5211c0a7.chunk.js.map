{"version":3,"sources":["reducers/graphReducer.js","reducers/rootReducer.js","components/Vertex.js","components/Edge.js","components/GraphCanvas.js","actions/graphActions.js","matrix.js","components/DownloadMatrixComponent.js","components/GraphRepresentation.js","components/CharPolAndSpectrum.js","components/GraphDataPanel.js","components/OptionsContainer.js","App.js","serviceWorker.js","index.js","store.js"],"names":["initialState","vertices","edges","selectedVertex","canvasPosition","combineReducers","graphReducer","state","action","type","x","y","index","filter","v","i","map","newVertices","v1","v2","some","a","dx","dy","zoom","cx","cy","vertex","Vertex","args","handleClick","bind","onDrag","leftClick","delayedUpdateVertex","throttle","props","updateVertex","dragEnd","e","cancelBubble","this","selectVertex","addEdge","deleteVertex","evt","button","target","isSelected","text","fill","fontFamily","fontStyle","radius","stroke","strokeWidth","onClick","onTouchStart","draggable","shadowColor","shadowBlur","shadowOffset","shadowOpacity","onDragMove","onDragEnd","hitStrokeWidth","Component","Edge","deleteEdge","points","GraphCanvas","dragStartX","dragStartY","width","height","startDrag","endDrag","wheelListener","delayedZoomCanvas","zoomCanvas","zoomIn","zoomOut","updateSize","delayedUpdateSize","window","addEventListener","removeEventListener","refs","container","getBoundingClientRect","setState","stage","getPointerPosition","px","py","addVertex","moveCanvas","preventDefault","deltaY","ref","style","position","bottom","right","cursor","zIndex","Icon","border","onDragStart","onWheel","onContextMenu","edge","key","vertice","connect","dispatch","Algebrite","require","arrayToLatexMatrix","array","arrayToTextMatrix","start","end","elSep","lineSep","row","join","zeros","h","w","Array","adjacencyMatrix","numberOfVertices","arrayOfEdges","matrix","length","degreeMatrix","minorMatrix","j","el","determinantExpressionObject","multiply","subtract","det","algebra","Expression","toString","exp","Math","pow","add","getRootsFromObject","obj","run","replace","split","n","roundToTwoD","round","includes","match","real","imaginary","undefined","roundComplex","sort","characteristicPolynomialObject","value","decimals","floor","divide","convertArrayToObjectMatrix","spectrumMatrixLatex","charObj","eigenvalues","spectrum","Set","charAndSpecLatex","characteristicPolynomial","charPolObj","toTex","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","top","color","palette","grey","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","DialogContent","overflow","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","matrixText","React","useState","open","setOpen","format","setFormat","expr","setExpr","newLines","setNewLines","representation","repr","setRepr","handleClose","Button","size","startIcon","Dialog","fullScreen","aria-labelledby","id","dividers","Grid","justify","maxWidth","FormControl","InputLabel","htmlFor","Select","onChange","labelId","MenuItem","FormControlLabel","control","Checkbox","checked","label","labelPlacement","readOnly","whiteSpace","document","getElementById","select","execCommand","autoFocus","textArea","file","Blob","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","useStyles","makeStyles","backgroundColor","background","paper","matrixContainer","maxHeight","outline","GraphRepresentation","setRepresentation","alignItems","direction","item","math","latexContainer","CharPolAndSpectrum","xs","gutterBottom","GraphDataPanel","nextProps","nextState","verticesLength","exprStyle","adj","deg","laplacianMatrix","expressions","simplifiedLatexSqrt","sqrt","r","Number","isInteger","SNLMatrix","symNorLaplacianMatrix","Divider","getMatrixRepresentation","CreateGraphCard","deleteGraph","cycleGraph","completeGraph","margulisExpander","initializeGraph","center","innerWidth","innerHeight","parseInt","prompt","cos","PI","sin","push","first","m","space","toIndex","normalizedEdges","forEach","Dropdown","Toggle","Menu","Item","onSelect","flexGrow","left","appBar","title","gridContainer","paddingTop","gridColumn","textAlign","secondary","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","store","createStore","rootReducer","applyMiddleware","thunk","Box","AppBar","OptionsContainer","Paper","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uTAAMA,EAAe,CACjBC,SAAU,GACVC,MAAO,GACPC,eAAgB,KAChBC,eAAgB,CAAC,EAAG,ICDTC,cAAgB,CAC3BC,aDGW,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC7C,OAAQA,EAAOC,MACX,IAAK,aAAL,IACWC,EAAQF,EAARE,EAAGC,EAAKH,EAALG,EACV,OAAO,eACAJ,EADP,CAEIN,SAAS,GAAD,mBAEGM,EAAMN,UAFT,CAEmB,CAACS,EAAGC,OAGvC,IAAK,gBAAL,IACYC,EAAUJ,EAAVI,MACR,OAAO,eACAL,EADP,CAEIJ,eAAgBS,IAExB,IAAK,gBACA,IACUA,EAASJ,EAATI,MACAX,EAAmCM,EAAnCN,SAAUC,EAAyBK,EAAzBL,MAAOC,EAAkBI,EAAlBJ,eAExB,OAAO,eACAI,EADP,CAEIN,SAAUA,EAASY,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMH,KAC1CV,MAAOA,EAEFW,QAAO,SAAAC,GAAC,OAAIA,EAAE,KAAOF,GAASE,EAAE,KAAOF,KAEvCI,KACG,SAAAF,GAAC,MACD,CACIA,EAAE,GAAKF,EAAQE,EAAE,GAAK,EAAIA,EAAE,GAC5BA,EAAE,GAAKF,EAAQE,EAAE,GAAK,EAAIA,EAAE,OAKxCX,eAAgBA,IAAmBS,EAC/B,KACAT,EAAiBS,EAAQT,EAAiB,EAAIA,IAG9D,IAAK,gBACA,IACUS,EAAeJ,EAAfI,MAAOF,EAAQF,EAARE,EAAGC,EAAKH,EAALG,EACXM,EAAW,YAAOV,EAAMN,UAG9B,OAFAgB,EAAYL,GAAO,GAAKF,EACxBO,EAAYL,GAAO,GAAKD,EACjB,eACAJ,EADP,CAEIN,SAAUgB,IAGtB,IAAK,WAAL,IACSC,EAAUV,EAAVU,GAAIC,EAAMX,EAANW,GACT,OAAIZ,EAAML,MAAMkB,MAAK,SAAAC,GAAC,OAAIA,EAAE,KAAKH,GAAMG,EAAE,KAAKF,KACnCZ,EAEP,eACOA,EADP,CAEIL,MAAM,GAAD,mBAEMK,EAAML,OAFZ,CAEmB,CAACgB,EAAIC,OAGzC,IAAK,cACA,IACUP,EAASJ,EAATI,MACAV,EAASK,EAATL,MACP,OAAO,eACAK,EADP,CAEIL,MACIA,EAAMW,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMH,OAG7C,IAAK,mBACD,OAAO,eACAL,EADP,CAEIN,SAAUO,EAAOP,SACjBC,MAAOM,EAAON,MACdC,eAAgB,KAChBC,eAAgB,CAAC,EAAG,KAE5B,IAAK,cACA,IACUkB,EAAUd,EAAVc,GAAIC,EAAMf,EAANe,GADf,cAEmBhB,EAAMH,eAFzB,GAEWM,EAFX,KAEcC,EAFd,KAGI,OAAO,eACAJ,EADP,CAEIH,eAAgB,CAACM,EAAIY,EAAIX,EAAIY,KAGzC,IAAK,cACA,IACUb,EAAcF,EAAdE,EAAGC,EAAWH,EAAXG,EAAGa,EAAQhB,EAARgB,KACPvB,EAAQ,YAAOM,EAAMN,UAF/B,cAGqBM,EAAMH,eAH3B,GAGWqB,EAHX,KAGeC,EAHf,KAII,OAAO,eACAnB,EADP,CAEIN,SAAUA,EAASe,KAAK,SAAAW,GAAM,MAAI,EAC7BA,EAAO,GAAKjB,EAAIe,GAAMD,EAAOd,EAAIe,GACjCE,EAAO,GAAKhB,EAAIe,GAAMF,EAAOb,EAAIe,QAIlD,QACI,OAAOnB,M,0JEtCJqB,E,YAvEX,aAAsB,IAAD,mDAANC,EAAM,yBAANA,EAAM,uBACjB,iEAASA,MACJC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBACd,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAEjB,EAAKG,oBAAsBC,oBAAS,SAACpB,EAAEL,EAAEC,GAAL,OAAW,EAAKyB,MAAMC,aAAatB,EAAEL,EAAEC,KAAI,IAE/E,EAAK2B,QAAU,SAAAC,GAAC,OAAIA,EAAEC,cAAe,GARpB,E,yEAWT,IAAD,EACgDC,KAAKL,MAArDxB,EADA,EACAA,MAAOT,EADP,EACOA,eAAgBuC,EADvB,EACuBA,aAAcC,EADrC,EACqCA,QACxC/B,IAAUT,EACNuC,EAAa,MACW,OAAnBvC,EACLwC,EAAQxC,EAAgBS,GAExB8B,EAAa9B,K,kCAGb2B,GACRA,EAAEC,cAAe,EADP,MAEoBC,KAAKL,MAA5BxB,EAFG,EAEHA,MAAOgC,EAFJ,EAEIA,aACO,IAAjBL,EAAEM,IAAIC,OACNL,KAAKR,UAAUM,GACS,IAAjBA,EAAEM,IAAIC,QACbF,EAAahC,K,6BAId2B,GACHE,KAAKP,oBAAoBO,KAAKL,MAAMxB,MAAO2B,EAAEQ,OAAOrC,IAAK6B,EAAEQ,OAAOpC,O,+BAG5D,IAAD,EACiC8B,KAAKL,MAApC1B,EADF,EACEA,EAAGC,EADL,EACKA,EAAGC,EADR,EACQA,MACPoC,EAAapC,IAFd,EACeT,eAEpB,OACI,kBAAC,QAAD,KACI,kBAAC,OAAD,CACIO,EAAGA,EAAI,EACPC,EAAGA,EAAI,EACPsC,KAAMrC,EAAQ,EACdsC,KAAM,QACNC,WAAY,aACZC,UAAW,SAEf,kBAAC,SAAD,CACI1C,EAAGA,EAAGC,EAAGA,EACT0C,OAAQL,EAAa,EAAI,EACzBE,KAAM,OACNI,OAAQN,EAAa,YAAc,QACnCO,YAAaP,EAAa,EAAI,EAC9BQ,QAASf,KAAKX,YACd2B,aAAchB,KAAKR,UACnByB,WAAW,EACXC,YAAa,QACbC,WAAYZ,EAAa,EAAI,EAC7Ba,aAAcb,EAAa,CAACtC,EAAG,EAAGC,EAAG,GAAM,CAACD,EAAG,EAAGC,EAAG,GACrDmD,cAAe,GACfC,WAAYtB,KAAKT,OACjBgC,UAAWvB,KAAKH,QAEhB2B,eAAgB,U,GAjEfC,aC+BNC,E,YA/BX,aAAsB,IAAD,mDAANtC,EAAM,yBAANA,EAAM,uBACjB,iEAASA,MACJC,YAAc,EAAKA,YAAYC,KAAjB,gBAFF,E,yEAKTQ,GAAG,IAAD,EACkBE,KAAKL,MAA1BxB,EADG,EACHA,MAAOwD,EADJ,EACIA,WAEO,IAAjB7B,EAAEM,IAAIC,QACNsB,EAAWxD,K,+BAGT,IAAD,EACY6B,KAAKL,MAAflB,EADF,EACEA,GAAIC,EADN,EACMA,GACX,OACI,kBAAC,OAAD,CACIkD,OAAQ,CAACnD,EAAG,GAAIA,EAAG,GAAIC,EAAG,GAAIA,EAAG,IACjCmC,OAAQ,QACRC,YAAa,EACbC,QAASf,KAAKX,YACd6B,YAAa,QACbC,WAAY,EACZC,aAAc,CAACnD,EAAG,EAAGC,EAAG,GACxBmD,cAAe,GAEfG,eAAgB,S,GA1BbC,a,SCObI,E,YACF,WAAYlC,GAAQ,IAAD,8BACf,4CAAMA,KACD7B,MAAQ,CACTgE,WAAY,EACZC,WAAY,EACZC,MAAO,EACPC,OAAQ,GAEZ,EAAK5C,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAK4C,UAAY,EAAKA,UAAU5C,KAAf,gBACjB,EAAK6C,QAAU,EAAKA,QAAQ7C,KAAb,gBACf,EAAK8C,cAAgB,EAAKA,cAAc9C,KAAnB,gBAErB,EAAK+C,kBAAoB3C,oBAAS,SAACzB,EAAGC,EAAGa,GAAP,OAAgB,EAAKY,MAAM2C,WAAWrE,EAAGC,EAAGa,KAAO,KACrF,EAAKwD,OAAS,kBAAM,EAAK5C,MAAM2C,WAC3B,EAAKxE,MAAMkE,MAAM,EACjB,EAAKlE,MAAMmE,OAAO,EAClB,MAEJ,EAAKO,QAAU,kBAAM,EAAK7C,MAAM2C,WAC5B,EAAKxE,MAAMkE,MAAM,EACjB,EAAKlE,MAAMmE,OAAO,EAClB,MAGJ,EAAKQ,WAAa,EAAKA,WAAWnD,KAAhB,gBAElB,EAAKoD,kBAAoBhD,mBAAS,EAAK+C,WAAY,KA3BpC,E,iFA+BfE,OAAOC,iBAAiB,SAAU5C,KAAK0C,mBACvC1C,KAAKyC,e,6CAILE,OAAOE,oBAAoB,SAAU7C,KAAK0C,qB,mCAGjC,IAAD,EACgB1C,KAAK8C,KAAKC,UAAUC,wBAArChB,EADC,EACDA,MAAOC,EADN,EACMA,OACdjC,KAAKiD,SAAS,CAACjB,QAAOC,a,kCAEdnC,GAAI,IAAD,EACYE,KAAK8C,KAAKI,MAAMC,qBAA7BC,EADC,EACJnF,EAAUoF,EADN,EACGnF,EADH,cAEM8B,KAAKL,MAAMhC,eAFjB,GAEJqB,EAFI,KAEAC,EAFA,KAIXe,KAAKL,MAAMM,aAAa,MAEH,IAAjBH,EAAEM,IAAIC,QAENL,KAAKL,MAAM2D,UAAUF,EAAKpE,EAAIqE,EAAKpE,K,kCAG9B,IAAD,EACOe,KAAK8C,KAAKI,MAAMC,qBAAxBlF,EADC,EACDA,EAAGC,EADF,EACEA,EAEV8B,KAAKiD,SAAS,CAACnB,WAAY7D,EAAG8D,WAAY7D,M,gCAGnC,IAAD,EAC2B8B,KAAKlC,MAA/BgE,EADD,EACCA,WAAYC,EADb,EACaA,WADb,EAES/B,KAAK8C,KAAKI,MAAMC,qBAEzBtE,EAJA,EAECZ,EAEQ6D,EACThD,EALA,EAEIZ,EAGK6D,EAEf/B,KAAKL,MAAM4D,WAAW1E,EAAIC,K,oCAGfgB,GAAI,IAAD,EACCE,KAAK8C,KAAKI,MAAMC,qBAAxBlF,EADO,EACPA,EAAGC,EADI,EACJA,EACV4B,EAAEM,IAAIoD,iBAEF1D,EAAEM,IAAIqD,OAAS,EACfzD,KAAKqC,kBAAkBpE,EAAGC,EAAG,KACxB4B,EAAEM,IAAIqD,OAAS,GACpBzD,KAAKqC,kBAAkBpE,EAAGC,EAAG,M,+BAG3B,IAAD,EAEmE8B,KAAKL,MADrEnC,EADH,EACGA,SAAUC,EADb,EACaA,MAAOC,EADpB,EACoBA,eAAgByC,EADpC,EACoCA,aACrCF,EAFC,EAEDA,aAAcC,EAFb,EAEaA,QAASyB,EAFtB,EAEsBA,WAAY/B,EAFlC,EAEkCA,aAAcjC,EAFhD,EAEgDA,eACrD,OACI,yBAAK+F,IAAI,YAAYC,MAAO,CAAC1B,OAAQ,OAAQ2B,SAAU,aACnD,0BAAMD,MAAO,CAACC,SAAU,WAAYC,OAAQ,EAAGC,MAAO,EAAGC,OAAQ,UAAWC,OAAQ,MAChF,kBAACC,EAAA,EAAD,CAAMlD,QAASf,KAAKuC,QAApB,WACA,kBAAC0B,EAAA,EAAD,CAAMlD,QAASf,KAAKwC,SAApB,aAEJ,kBAAC,QAAD,CACImB,MAAO,CAACO,OAAQ,aAChBlC,MAAOhC,KAAKlC,MAAMkE,MAAQ,EAC1BC,OAAQjC,KAAKlC,MAAMmE,OACnBlB,QAASf,KAAKX,YACd4B,WAAS,EACTkD,YAAanE,KAAKkC,UAClBX,UAAWvB,KAAKmC,QAChBiC,QAASpE,KAAKoC,cACdnE,EAAGN,EAAe,GAAIO,EAAGP,EAAe,GACxC+F,IAAI,QAEJW,cAAe,SAACvE,GAAD,OAAOA,EAAEM,IAAIoD,mBAE5B,kBAAC,QAAD,KAEQ/F,EAAMc,KAAK,SAAC+F,EAAMnG,GAAP,OACP,kBAAC,EAAD,CACIoG,IAAKpG,EACLA,MAAOA,EACPM,GAAIjB,EAAS8G,EAAK,IAClB5F,GAAIlB,EAAS8G,EAAK,IAClB3C,WAAYA,QAK5B,kBAAC,QAAD,KAEQnE,EAASe,KAAK,SAACiG,EAASrG,GAAV,OACV,kBAAC,EAAD,CACIoG,IAAKpG,EACLF,EAAGuG,EAAQ,GACXtG,EAAGsG,EAAQ,GACXrG,MAAOA,EACPT,eAAgBA,EAChBuC,aAAcA,EACdC,QAASA,EACTN,aAAcA,EACdO,aAAcA,c,GAjIxBsB,aA2JXgD,eAfS,SAAA3G,GAAK,sBACtBA,EAAMD,iBAGc,SAAA6G,GAAQ,MAAK,CACpCpB,UAAW,SAACrF,EAAEC,GAAH,OAASwG,EC3JC,SAACzG,EAAGC,GAAJ,OAAU,SAAAwG,GAC/BA,EAAS,CACL1G,KAAM,aACNC,IACAC,ODuJyBoF,CAAUrF,EAAEC,KACzCiC,aAAc,SAAAhC,GAAK,OAAIuG,ECpJC,SAACvG,GAAD,OAAW,SAAAuG,GACnCA,EAAS,CACL1G,KAAM,gBACNG,WDiJ4BgC,CAAahC,KAC7C8B,aAAc,SAAA9B,GAAK,OAAIuG,EC9IC,SAACvG,GAAD,OAAW,SAAAuG,GACnCA,EAAS,CACL1G,KAAM,gBACNG,WD2I4B8B,CAAa9B,KAC7C+B,QAAS,SAACzB,EAAIC,GAAL,OAAYgG,EC/HF,SAACjG,EAAIC,GAAL,OAAY,SAAAgG,GAC/BA,EAAS,CACL1G,KAAM,WACNS,KACAC,QD2H0BwB,CAAQzB,EAAIC,KAC1CiD,WAAY,SAAAxD,GAAK,OAAIuG,ECxHC,SAACvG,GAAD,OAAW,SAAAuG,GACjCA,EAAS,CACL1G,KAAM,cACNG,WDqH0BwD,CAAWxD,KACzCyB,aAAc,SAACzB,EAAOF,EAAGC,GAAX,OAAiBwG,EC1IP,SAACvG,EAAOF,EAAGC,GAAX,OAAiB,SAAAwG,GACzCA,EAAS,CACL1G,KAAM,gBACNG,QACAF,IACAC,ODqIoC0B,CAAazB,EAAOF,EAAGC,KAC/DqF,WAAY,SAAC1E,EAAIC,GAAL,OAAY4F,EC3GF,SAAC7F,EAAIC,GAAL,OAAY,SAAA4F,GAClCA,EAAS,CACL1G,KAAM,cACNa,KACAC,QDuG6ByE,CAAW1E,EAAIC,KAChDwD,WAAY,SAACrE,EAAGC,EAAGa,GAAP,OAAgB2F,ECpGN,SAACzG,EAAGC,EAAGa,GAAP,OAAgB,SAAA2F,GACtCA,EAAS,CACL1G,KAAM,cACNC,IACAC,IACAa,UD+FiCuD,CAAWrE,EAAGC,EAAGa,QAG3C0F,CAA8C5C,G,iBEpKvD8C,EAAYC,EAAQ,KAEbC,EAAqB,SAACC,GAAD,OAC9BC,EAAkBD,EAAO,mBAAoB,iBAAkB,IAAK,SAE3DC,EAAoB,SAACD,EAAOE,EAAOC,EAAKC,EAAOC,GAA3B,gBAC1BH,GAD0B,OAClBF,EAAMvG,KAAI,SAAA6G,GAAG,OAAIA,EAAIC,KAAKH,MAAQG,KAAKF,IADrB,OACgCF,IAEpDK,EAAQ,SAACC,EAAGC,GAAJ,OACjBC,MAAMF,GAAG9E,OAAOlC,KAAI,kBAAMkH,MAAMD,GAAG/E,KAAK,OAE/BiF,EAAkB,SAACC,EAAkBC,GAI9C,IAFA,IAAIC,EAASP,EAAMK,EAAkBA,GAE5BrH,EAAE,EAAGA,EAAIsH,EAAaE,OAAQxH,IACnCuH,EAAOD,EAAatH,GAAG,IAAIsH,EAAatH,GAAG,IAAM,EACjDuH,EAAOD,EAAatH,GAAG,IAAIsH,EAAatH,GAAG,IAAM,EAErD,OAAOuH,GAGEE,EAAe,SAACJ,EAAkBC,GAI3C,IAFA,IAAIC,EAASP,EAAMK,EAAkBA,GAE5BrH,EAAE,EAAGA,EAAIsH,EAAaE,OAAQxH,IACnCuH,EAAOD,EAAatH,GAAG,IAAIsH,EAAatH,GAAG,KAAO,EAClDuH,EAAOD,EAAatH,GAAG,IAAIsH,EAAatH,GAAG,KAAO,EAEtD,OAAOuH,GA0EEG,EAAc,SAAClB,EAAOxG,EAAG2H,GAClC,OAAOnB,EAEF1G,QAAO,SAACgH,EAAKjH,GAAN,OAAgBA,IAAUG,KAEjCC,KAAI,SAAA6G,GAAG,OAAIA,EAAIhH,QAAO,SAAC8H,EAAG/H,GAAJ,OAAcA,IAAU8H,SAK1CE,EAA8B,SAA9BA,EAA+BrB,GACxC,GAAqB,IAAjBA,EAAMgB,OAEN,OAAOhB,EAAM,GAAG,GACb,GAAqB,IAAjBA,EAAMgB,OAGb,OAAOhB,EAAM,GAAG,GAAGsB,SAAStB,EAAM,GAAG,IAAIuB,SAASvB,EAAM,GAAG,GAAGsB,SAAStB,EAAM,GAAG,KAGpF,IADA,IAAIwB,EAAM,IAAIC,IAAQC,WAAW,GACxBlI,EAAI,EAAGA,EAAIwG,EAAMgB,OAAQxH,IAC9B,GAA+B,MAA3BwG,EAAM,GAAGxG,GAAGmI,WAAoB,CAChC,IAAIC,EAAM,IAAIH,IAAQC,WAAWG,KAAKC,KAAK,EAAGtI,IAE9CoI,GADAA,EAAMA,EAAIN,SAAStB,EAAM,GAAGxG,KAClB8H,SAASD,EAA4BH,EAAYlB,EAAM,EAAExG,KACnEgI,EAAMA,EAAIO,IAAIH,GAGtB,OAAOJ,GA4CEQ,EAAqB,SAACC,GAE/B,OAAOpC,EAAUqC,IAAV,iBAAwBD,EAAIN,WAA5B,MACFA,WAEAQ,QAAQ,kBAAmB,IAE3BC,MAAM,KAEN3I,KAAI,SAAA4I,GAAC,OA7Bc,SAAAA,GAExB,IAAMC,EAAc,SAAAD,GAAC,OAAIR,KAAKU,MAAU,IAAJF,GAAW,KAE/C,GAAIA,EAAEG,SAAS,KAAK,OAEUH,EAAEI,MAAM,mBAAmBhJ,KAAI,SAAAN,GAAC,OAAImJ,EAAYnJ,MAF1D,mBAETuJ,EAFS,KAEHC,EAFG,KAKhB,YAAkBC,IAAdD,EAA+B,GAAN,OAAUD,EAAV,KAEX,IAAdC,EAAwBD,EAEf,IAATA,EAAkB,GAAN,OAAUC,EAAV,KAEV,GAAN,OAAUD,GAAV,OAAiBC,EAAY,EAAI,IAAM,IAAvC,OAA4CA,EAA5C,KAEJ,OAAOL,EAAYD,GAYLQ,CAAaR,MACtBS,QAGIC,EAAiC,SAAC/C,GAG3C,IAFA,IAAIe,EAhDkC,SAACf,GAGvC,IADA,IAN4BgD,EAMxBjC,EAAS,GACJvH,EAAE,EAAGA,EAAIwG,EAAMgB,OAAQxH,IAAI,CAChCuH,EAAOvH,GAAK,GACZ,IAAK,IAAI2H,EAAE,EAAGA,EAAInB,EAAMgB,OAAQG,IAAK,CACjC,IAAM8B,GAVcD,EAUWhD,EAAMxG,GAAG2H,GAT7CU,KAAKqB,MAAMF,KAAWA,EAAc,EAChCA,EAAMrB,WAAWS,MAAM,KAAK,GAAGpB,QAAU,GASxCD,EAAOvH,GAAG2H,GAAK,IAAIM,IAAQC,WAAW1B,EAAMxG,GAAG2H,GAAIU,KAAKC,IAAI,GAAImB,IAC3DE,OAAOtB,KAAKC,IAAI,GAAImB,KAGjC,OAAOlC,EAqCMqC,CAA2BpD,GAE/BxG,EAAE,EAAGA,EAAIuH,EAAOC,OAAQxH,IAC7BuH,EAAOvH,GAAGA,GAAKuH,EAAOvH,GAAGA,GAAG+H,SAAS,KAEzC,OAAOF,EAA4BN,IAG1BsC,EAAsB,SAACC,GAChC,IAAMC,EAAcvB,EAAmBsB,GACjCE,EAAW,YAAI,IAAIC,IAAIF,IAAc9J,KACvC,SAAAN,GAAC,MAAI,CAACA,EAAGoK,EAAYjK,QAAO,SAAAF,GAAC,OAAIA,IAAMD,KAAG6H,WAE9C,MAAM,kCAAN,OAAyCwC,EAAS/J,KAAI,SAAA6G,GAAG,OAAIA,EAAI,MAAIC,KAAK,KAA1E,eAAqFiD,EAAS/J,KAAI,SAAA6G,GAAG,OAAIA,EAAI,MAAIC,KAAK,KAAtH,mBAKSmD,EAAmB,SAAC1D,GAC7B,GAAqB,IAAjBA,EAAMgB,OAAc,MAAO,CAC3B2C,yBAA0B,8BAC1BH,SAAU,qDAEd,IAAMI,EAAab,EAA+B/C,GAClD,MAAO,CACH2D,yBAAyB,6BAAD,OAA+BlC,IAAQoC,MAAMD,GAAYzB,QAAQ,KAAM,aAC/FqB,SAAUH,EAAoBO,K,8LCvLhCE,GAAcC,aAbL,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,IAEzBC,YAAa,CACXvF,SAAU,WACVE,MAAOgF,EAAMI,QAAQ,GACrBE,IAAKN,EAAMI,QAAQ,GACnBG,MAAOP,EAAMQ,QAAQC,KAAK,SAIVV,EAAmB,SAAAlJ,GAAU,IACvC6J,EAAyC7J,EAAzC6J,SAAUC,EAA+B9J,EAA/B8J,QAASC,EAAsB/J,EAAtB+J,QAAYC,EADO,YACGhK,EADH,kCAE9C,OACE,kBAAC,KAAD,eAAgBiK,mBAAiB,EAACC,UAAWJ,EAAQV,MAAUY,GAC7D,kBAACG,EAAA,EAAD,CAAYC,QAAQ,MAAMP,GACzBE,EACC,kBAACM,GAAA,EAAD,CAAYC,aAAW,QAAQJ,UAAWJ,EAAQN,YAAapI,QAAS2I,GACtE,kBAAC,KAAD,OAEA,SAKJQ,GAAgBrB,aAAW,SAAAC,GAAK,MAAK,CACzCC,KAAM,CACJE,QAASH,EAAMI,QAAQ,GACvBiB,SAAU,aAHQtB,CAKlBuB,MAEEC,GAAgBxB,aAAW,SAAAC,GAAK,MAAK,CACzCC,KAAM,CACJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,OAHLL,CAKlByB,MAEW,SAASC,GAAkB5K,GAAQ,IA4C5C6K,EA5C2C,EACvBC,IAAMC,UAAS,GADQ,mBACxCC,EADwC,KAClCC,EADkC,OAEnBH,IAAMC,SAAS,SAFI,mBAExCG,EAFwC,KAEhCC,EAFgC,OAGvBL,IAAMC,SAAS,UAHQ,mBAGxCK,EAHwC,KAGlCC,EAHkC,OAIfP,IAAMC,UAAS,GAJA,mBAIxCO,EAJwC,KAI9BC,EAJ8B,OAKvBT,IAAMC,SAAS/K,EAAMwL,gBALE,mBAKxCC,EALwC,KAKlCC,EALkC,KAUzCC,EAAc,WAClBV,GAAQ,IA+BH/E,EAAUlG,EAAVkG,OAIP,OAAQgF,GACN,IAAK,UACHL,EAAazF,EAAkBc,EAAO,KAAK,KAAK,KAAlB,YAA4BoF,EAAW,KAAO,GAA9C,MAC9B,MACF,IAAK,YACHT,EAAazF,EAAkBc,EAAO,KAAK,KAAK,KAAlB,YAA4BoF,EAAW,KAAO,GAA9C,MAC9B,MACF,IAAK,SACHT,EAAazF,EAAkBc,EAAO,IAAI,IAAI,KAAhB,WAAyBoF,EAAW,KAAO,MACzE,MACF,IAAK,QACHT,EAAazF,EAAkBc,EAAQ,mBAAoB,iBACzD,IAD4B,cAChBoF,EAAW,KAAO,MAChC,MACF,IAAK,QACL,QACET,EAAazF,EAAkBc,EAAO,GAAG,GAAG,IAAIoF,EAAW,KAAO,KAItE,OACE,6BACE,kBAACM,GAAA,EAAD,CACExB,QAAQ,YACRV,MAAM,UACNmC,KAAK,QACLzK,QAjEkB,WACtB6J,GAAQ,IAiEJa,UAAW,kBAAC,KAAD,OALb,mBASA,kBAACC,GAAA,EAAD,CAAQC,YAAU,EAACjC,QAAS4B,EAAaM,kBAAgB,0BAA0BjB,KAAMA,GACvF,kBAAC,GAAD,CAAakB,GAAG,0BAA0BnC,QAAS4B,GAAnD,mBAGA,kBAAC,GAAD,CAAeQ,UAAQ,GACrB,kBAACC,EAAA,EAAD,CAAMhJ,WAAS,EAACiJ,QAAQ,eAAerI,MAAO,CAACsI,SAAU,MACvD,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,QAAQ,+BAApB,kBACA,kBAACC,EAAA,EAAD,CACEvE,MAAOsD,EACPkB,SAAU,SAAAxM,GAAC,OAAIuL,EAAQvL,EAAEQ,OAAOwH,QAChCyE,QAAQ,+BAER,kBAACC,EAAA,EAAD,CAAU1E,MAAO,aAAjB,aACA,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,UAAjB,UACA,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,aAAjB,aACA,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,eAAjB,oCAGJ,kBAACoE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,QAAQ,uBAApB,UACA,kBAACC,EAAA,EAAD,CACEvE,MAAO+C,EACPyB,SAAU,SAAAxM,GAAC,OAAIgL,EAAUhL,EAAEQ,OAAOwH,QAClCyE,QAAQ,uBAER,kBAACC,EAAA,EAAD,CAAU1E,MAAO,SAAjB,mBACA,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,WAAjB,gBAA0C,OAC1C,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,aAAjB,mBAA+C,OAC/C,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,UAAjB,UACA,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,SAAjB,WAGJ,kBAACoE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,eACA,kBAACC,EAAA,EAAD,CACEvE,MAAOiD,EACPuB,SAAU,SAAAxM,GAAC,OAAIkL,EAAQlL,EAAEQ,OAAOwH,QAChCyE,QAAQ,oBAER,kBAACC,EAAA,EAAD,CAAU1E,MAAO,UAAjB,eACA,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,SAAjB,WAGJ,kBAACoE,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CACE3E,MAAOmD,EACPyB,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAAS3B,EAAU5B,MAAM,UAAUiD,SAAU,SAAAxM,GAAC,OAAIoL,EAAYpL,EAAEQ,OAAOsM,YAC1FC,MAAM,YACNC,eAAe,YAInB,8BACIC,UAAU,EACVpJ,MAAO,CAAC3B,MAAO,OAAQC,OAAQ,OAAQ+K,WAAY,WACnDlF,MAAO0C,EACPqB,GAAI,oBAGZ,kBAAC,GAAD,KACE,kBAACN,GAAA,EAAD,CAAQxK,QA5HC,WAEEkM,SAASC,eAAe,kBAEhCC,SAETF,SAASG,YAAY,SAsHY/D,MAAM,WAAjC,0BAGA,kBAACkC,GAAA,EAAD,CAAQ8B,WAAS,EAACtM,QAtHT,WAEf,IAAMuM,EAAWL,SAASC,eAAe,kBAErCK,EAAO,IAAIC,KAAK,CAACF,EAASxF,OAAQ,CAAC9J,KAAM,eAEvCY,EAAIqO,SAASQ,cAAc,KAC3BC,EAAMC,IAAIC,gBAAgBL,GAChC3O,EAAEiP,KAAOH,EACT9O,EAAEkP,SAAW,aACbb,SAASc,KAAKC,YAAYpP,GAE1BA,EAAEqP,QAEFC,YAAW,WACTjB,SAASc,KAAKI,YAAYvP,GAC1B+D,OAAOgL,IAAIS,gBAAgBV,KAC1B,IAqGwCrE,MAAM,WAA3C,+BC/LV,IAAMgF,GAAYC,aAAW,SAAAxF,GAAK,MAAK,CACnCC,KAAM,CACF/G,MAAO,OACPuM,gBAAiBzF,EAAMQ,QAAQkF,WAAWC,OAE9CC,gBAAiB,CACb1F,OAAQ,OACRhH,MAAO,OACP2M,UAAW,QACXxE,SAAU,OACV,uBAAwB,CACpBnI,MAAO,QACPC,OAAQ,SAEZ,6BAA8B,CAC1B,qBAAsB,kCAE1B,6BAA8B,CAC1BsM,gBAAiB,iBACjBK,QAAS,4BAKN,SAASC,GAAT,GAA4E,IAA7ChJ,EAA4C,EAA5CA,OAAQsF,EAAoC,EAApCA,eAAgB2D,EAAoB,EAApBA,kBAC5DrF,EAAU4E,KAEhB,OACI,yBAAKxE,UAAWJ,EAAQV,MACpB,kBAACgD,EAAA,EAAD,CAAMhJ,WAAS,EAACgM,WAAW,SAASC,UAAU,UAC1C,kBAACjD,EAAA,EAAD,CAAMkD,MAAI,GACN,kBAAClD,EAAA,EAAD,CAAMhJ,WAAS,EAACiM,UAAW,OACvB,kBAACjD,EAAA,EAAD,CAAMkD,MAAI,GACN,kBAAC5C,EAAA,EAAD,CACIvE,MAAOqD,EACPmB,SAAU,SAAAxM,GAAC,OAAIgP,EAAkBhP,EAAEQ,OAAOwH,QAC1CyE,QAAQ,+BAER,kBAACC,EAAA,EAAD,CAAU1E,MAAO,aAAjB,aACA,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,UAAjB,UACA,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,aAAjB,aACA,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,eAAjB,oCAGR,kBAACiE,EAAA,EAAD,CAAMkD,MAAI,GACN,kBAACnF,EAAA,EAAD,CAAYC,QAAQ,MAApB,aAIZ,kBAACgC,EAAA,EAAD,CAAMkD,MAAI,EAACpF,UAAWJ,EAAQiF,iBAC1B,kBAAC,aAAD,CAAYQ,KAAMrK,EAAmBgB,MAEzC,kBAACkG,EAAA,EAAD,CAAMkD,MAAI,GACN,kBAAC,GAAD,CACIpJ,OAAQA,EACRsF,eAAgBA,OC3DxC,IAAMkD,GAAYC,aAAW,SAAAxF,GAAK,MAAK,CACnCC,KAAM,CACF/G,MAAO,OACPuM,gBAAiBzF,EAAMQ,QAAQkF,WAAWC,OAE9CU,eAAgB,CACZnG,OAAQ,OACRhH,MAAO,OACP2M,UAAW,QACXxE,SAAU,YAIH,SAASiF,GAAT,GAAwC,IAAVvJ,EAAS,EAATA,OACnC4D,EAAU4E,KADkC,EAI9CxI,EAAOC,OAAO,GACQ0C,EAAiB3C,GAEjB,CAClB4C,yBAA0B,mEAC1BH,SAAU,iEAGbG,EAZ6C,EAY7CA,yBAA0BH,EAZmB,EAYnBA,SAC/B,OACI,yBAAKuB,UAAWJ,EAAQV,MACpB,kBAACgD,EAAA,EAAD,CAAMhJ,WAAS,EAACgM,WAAW,SAASC,UAAU,UAC1C,kBAACjD,EAAA,EAAD,CAAMkD,MAAI,EAACI,IAAE,GACT,kBAACvF,EAAA,EAAD,CAAYwF,cAAY,EAACvF,QAAQ,MAAjC,2CAIJ,kBAACgC,EAAA,EAAD,CAAMkD,MAAI,EAACpF,UAAWJ,EAAQ0F,gBAC1B,kBAAC,aAAD,CAAYD,KAAMzG,IAClB,6BACA,kBAAC,aAAD,CAAYyG,KAAM5G,O,cCrChCiH,G,YACF,WAAY5P,GAAO,IAAD,8BACd,4CAAMA,KACD7B,MAAQ,CACTqN,eAAgB,aAEpB,EAAK2D,kBAAoB,EAAKA,kBAAkBxP,KAAvB,gBALX,E,mFAQIkQ,EAAWC,GAE7B,OAAOD,EAAUhS,SAASsI,SAAW9F,KAAKL,MAAMnC,SAASsI,QACrD0J,EAAU/R,MAAMqI,SAAW9F,KAAKL,MAAMlC,MAAMqI,QAC5C2J,EAAUtE,iBAAmBnL,KAAKlC,MAAMqN,iB,8CAGxBA,EAAgBuE,EAAgBjS,EAAOkS,GAC3D,IAAI9J,EACJ,OAAOsF,GACH,IAAK,SACDtF,EAASE,EAAa2J,EAAgBjS,GACtC,MACJ,IAAK,YACDoI,EJGe,SAACF,EAAkBC,GAI9C,IAHA,IAAMgK,EAAMlK,EAAgBC,EAAkBC,GACxCiK,EAAM9J,EAAaJ,EAAkBC,GACvCkK,EAAkB,GACbxR,EAAI,EAAGA,EAAIqH,EAAkBrH,IAAK,CACvCwR,EAAgBxR,GAAK,GACrB,IAAK,IAAI2H,EAAI,EAAGA,EAAIN,EAAkBM,IAClC6J,EAAgBxR,GAAG2H,GAAK4J,EAAIvR,GAAG2H,GAAK2J,EAAItR,GAAG2H,GAGnD,OAAO6J,EIbcA,CAAgBJ,EAAgBjS,GACzC,MACJ,IAAK,cACDoI,EJaqB,SACjCF,EACAC,GAeA,IAbE,IADFmK,EACC,uDADa,cAERH,EAAMlK,EAAgBC,EAAkBC,GACxCiK,EAAM9J,EAAaJ,EAAkBC,GACrCoK,EAAsB,SAAC7I,GACzB,IAAK,IAAI7I,EAAIqI,KAAKqB,MAAMrB,KAAKsJ,KAAK9I,IAAK7I,GAAK,EAAGA,IAAI,CAC/C,IAAI4R,EAAI/I,GAAG7I,EAAEA,GACb,GAAG6R,OAAOC,UAAUF,GAChB,MAAM,GAAN,OAAU5R,GAAV,OAAqB,IAAN4R,EAAD,iBAAsB/I,GAAG7I,EAAEA,GAA3B,KAAmC,IAGzD,MAAM,UAAN,OAAiB6I,EAAjB,MAEAkJ,EAAY,GACP/R,EAAI,EAAGA,EAAIqH,EAAkBrH,IAAK,CACvC+R,EAAU/R,GAAK,GACf,IAAK,IAAI2H,EAAI,EAAGA,EAAIN,EAAkBM,IAClC,GAAI3H,IAAM2H,EACNoK,EAAU/R,GAAG2H,GAAK,OAElB,OAAQ8J,GACJ,IAAK,QACDM,EAAU/R,GAAG2H,GAAoB,IAAd2J,EAAItR,GAAG2H,GAAR,kBACH2J,EAAItR,GAAG2H,GADJ,aACW+J,EAAoBH,EAAIvR,GAAGA,GAAGuR,EAAI5J,GAAGA,IADhD,KAEd,EACJ,MACJ,IAAK,cACL,QACIoK,EAAU/R,GAAG2H,GACTU,KAAKU,OAASuI,EAAItR,GAAG2H,GAAKU,KAAKsJ,KAAKJ,EAAIvR,GAAGA,GAAGuR,EAAI5J,GAAGA,IAAQ,KAAO,KAK5F,OAAOoK,EIlDcC,CAAsBZ,EAAgBjS,EAAOkS,GACtD,MACJ,IAAK,YACL,QACI9J,EAASH,EAAgBgK,EAAgBjS,GAEjD,OAAOoI,I,wCAGOqK,GACdlQ,KAAKiD,SAAS,CAACkI,eAAgB+E,M,+BAGzB,IAAD,EACqBlQ,KAAKL,MAAxBnC,EADF,EACEA,SAAUC,EADZ,EACYA,MACV0N,EAAkBnL,KAAKlC,MAAvBqN,eACP,OACI,6BACI,kBAACrB,EAAA,EAAD,CAAYwF,cAAY,EAACvF,QAAQ,MAAjC,wBAGA,kBAACwG,GAAA,EAAD,CAASxG,QAAQ,SAASpG,MAAO,CAACqF,OAAQ,UAC1C,kBAAC6F,GAAD,CACIhJ,OAAQ7F,KAAKwQ,wBAAwBrF,EAAgB3N,EAASsI,OAAQrI,EAAO,SAC7E0N,eAAgBnL,KAAKlC,MAAMqN,eAC3B2D,kBAAmB9O,KAAK8O,oBAE5B,kBAACyB,GAAA,EAAD,CAASxG,QAAQ,SAASpG,MAAO,CAACqF,OAAQ,UAC1C,kBAACoG,GAAD,CACIvJ,OAAQ7F,KAAKwQ,wBAAwBrF,EAAgB3N,EAASsI,OAAQrI,EAAO,iB,GAvDpEgE,aAkEdgD,gBAJS,SAAA3G,GAAK,sBACtBA,EAAMD,gBAG2B,KAAzB4G,CAAgC8K,I,UCrEzCkB,G,YACF,aAAsB,IAAD,mDAANrR,EAAM,yBAANA,EAAM,uBACjB,iEAASA,MACJsR,YAAc,EAAKA,YAAYpR,KAAjB,gBACnB,EAAKqR,WAAa,EAAKA,WAAWrR,KAAhB,gBAClB,EAAKsR,cAAgB,EAAKA,cAActR,KAAnB,gBACrB,EAAKuR,iBAAmB,EAAKA,iBAAiBvR,KAAtB,gBALP,E,2EASjBU,KAAKL,MAAMmR,gBAAgB,GAAG,M,mCAI9B,IAAMC,EAAS,CAACpO,OAAOqO,WAAW,EAAGrO,OAAOsO,YAAY,GAClDrQ,EAAS+B,OAAOqO,WAAW,EAC7BrL,EAAmBwK,OAAOe,SAASC,OAAO,sCAAuC,IAChFhB,OAAOC,UAAUzK,KAAmBA,EAAmB,GAG5D,IAFA,IAAInI,EAAW,GACXC,EAAQ,GACHa,EAAI,EAAGA,EAAIqH,EAAkBrH,IAClCd,EAASc,GAAK,CACVyS,EAAO,GAAGnQ,EAAO+F,KAAKyK,IAAI,EAAEzK,KAAK0K,GAAG/S,EAAEqH,GACtCoL,EAAO,GAAGnQ,EAAO+F,KAAK2K,IAAI,EAAE3K,KAAK0K,GAAG/S,EAAEqH,IAE1ClI,EAAMa,GAAK,CAACA,GAAIA,EAAE,GAAGqH,GAEzB3F,KAAKL,MAAMmR,gBAAgBtT,EAASC,K,sCAIpC,IAAMsT,EAAS,CAACpO,OAAOqO,WAAW,EAAGrO,OAAOsO,YAAY,GAClDrQ,EAAS+B,OAAOqO,WAAW,EAC7BrL,EAAmBwK,OAAOe,SAASC,OAAO,sCAAuC,IACrF,GAAKhB,OAAOC,UAAUzK,GAAtB,CAGA,IAFA,IAAInI,EAAW,GACXC,EAAQ,GACHa,EAAI,EAAGA,EAAIqH,EAAkBrH,IAClCd,EAASc,GAAK,CACVyS,EAAO,GAAGnQ,EAAO+F,KAAKyK,IAAI,EAAEzK,KAAK0K,GAAG/S,EAAEqH,GACtCoL,EAAO,GAAGnQ,EAAO+F,KAAK2K,IAAI,EAAE3K,KAAK0K,GAAG/S,EAAEqH,IAI9C,IAAK,IAAIrH,EAAI,EAAGA,EAAIqH,EAAkBrH,IAClC,IAAK,IAAI2H,EAAI3H,EAAI,EAAG2H,EAAIN,EAAkBM,IACtCxI,EAAM8T,KAAK,CAACjT,EAAE2H,IAGtBjG,KAAKL,MAAMmR,gBAAgBtT,EAASC,M,yCAIpC,IAAM+T,EAAQ,CAAC7O,OAAOqO,WAAW,GAAIrO,OAAOsO,YAAY,IACpDQ,EAAItB,OAAOe,SAASC,OAAO,mCAAoC,IAC7DO,EAAQ/O,OAAOqO,YAAY,IAAIS,GACrC,GAAKtB,OAAOC,UAAUqB,MAAMA,EAAI,GAAhC,CAIA,IAHA,IAAIjU,EAAW,GACXC,EAAQ,GACNkU,EAAU,SAAC1T,EAAEC,GAAH,OAASD,EAAEwT,EAAEvT,GACpBI,EAAI,EAAGA,EAAImT,EAAGnT,IACnB,IAAK,IAAI2H,EAAI,EAAGA,EAAIwL,EAAGxL,IACnBzI,EAAS+T,KAAK,CACVC,EAAM,GAAKE,EAAQpT,EAA6B,IAAvBqI,KAAKC,IAAIX,EAAEwL,EAAE,EAAE,GAAGxL,GAAQwL,EACnDD,EAAM,GAAKE,EAAQzL,EAA6B,IAAvBU,KAAKC,IAAItI,EAAEmT,EAAE,EAAE,GAAGnT,GAAQmT,IAEvDhU,EAAM8T,KAAK,CAACI,EAAQrT,EAAE2H,GAAG0L,EAAQrT,GAAG2H,EAAE,GAAGwL,KACzChU,EAAM8T,KAAK,CAACI,EAAQrT,EAAE2H,GAAG0L,GAASrT,EAAE,GAAGmT,EAAExL,KACzCxI,EAAM8T,KAAK,CAACI,EAAQrT,EAAE2H,GAAG0L,EAAQrT,GAAGA,EAAE2H,GAAGwL,KACzChU,EAAM8T,KAAK,CAACI,EAAQrT,EAAE2H,GAAG0L,EAAQF,EAAExL,EAAE,EAAG3H,KAIhD,IAAIsT,EAAkB,GACtBnU,EAAMoU,SAAQ,SAACvN,GACNsN,EAAgBjT,MAAK,SAAAmB,GAAC,OACtBA,EAAE,KAAOwE,EAAK,IAAMxE,EAAE,KAAOwE,EAAK,IAClCxE,EAAE,KAAOwE,EAAK,IAAMxE,EAAE,KAAOwE,EAAK,IAClCA,EAAK,KAAOA,EAAK,OACnBsN,EAAgBL,KAAKjN,MAE5BtE,KAAKL,MAAMmR,gBAAgBtT,EAASoU,M,+BAIpC,OACI,kBAACE,GAAA,EAAD,KACI,kBAACA,GAAA,EAASC,OAAV,CAAiBhI,QAAQ,UAAU8B,GAAG,kBAAtC,UAIA,kBAACiG,GAAA,EAASE,KAAV,KACI,kBAACF,GAAA,EAASG,KAAV,CAAeC,SAAUlS,KAAK0Q,aAA9B,OACA,kBAACoB,GAAA,EAASG,KAAV,CAAeC,SAAUlS,KAAK2Q,YAA9B,eACA,kBAACmB,GAAA,EAASG,KAAV,CAAeC,SAAUlS,KAAK4Q,eAA9B,kBACA,kBAACkB,GAAA,EAASG,KAAV,CAAeC,SAAUlS,KAAK6Q,kBAA9B,2B,GA/FUpP,aA8GfgD,gBARS,SAAA3G,GAAK,sBACtBA,EAAMD,iBAGc,SAAA6G,GAAQ,MAAK,CACpCoM,gBAAiB,SAACtT,EAAUC,GAAX,OAAqBiH,ENlEX,SAAClH,EAAUC,GAAX,OAAqB,SAAAiH,GAChDA,EAAS,CACL1G,KAAM,mBACNR,WACAC,WM8D2CqT,CAAgBtT,EAAUC,QAG9DgH,CAA8CgM,ICnGvDpC,GAAYC,aAAW,SAAAxF,GAAK,MAAK,CACrCC,KAAM,CACJoJ,SAAU,EACV5D,gBAAiB,UACjBtF,QAAS,OACTrF,SAAU,QACVwF,IAAK,EACLvF,OAAQ,EACRuO,KAAM,EACNtO,MAAO,GAETuO,OAAQ,CACNF,SAAU,GAEZG,MAAO,CACLH,SAAU,GAEZI,cAAe,CACbtQ,OAAQ,OACRuQ,WAAY,QAEdC,WAAY,CACVxQ,OAAQ,QAEVwM,MAAO,CACLxF,QAASH,EAAMI,QAAQ,GACvBwJ,UAAW,SACXrJ,MAAOP,EAAMQ,QAAQ9I,KAAKmS,UAC1B1Q,OAAQ,OACRkI,SAAU,YCjCd,IAAMyI,GAAcC,QACW,cAA7BlQ,OAAOmQ,SAASC,UAEe,UAA7BpQ,OAAOmQ,SAASC,UAEhBpQ,OAAOmQ,SAASC,SAASxL,MACvB,2DAsCN,SAASyL,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3V,QACfqV,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCxFjEC,IAASC,OACL,kBAAC,IAAD,CAAUC,MCJHC,YACHC,EACAC,YAAgBC,ODGhB,mBFuCO,WACb,IAAMhL,EAAU4E,KAEhB,OACE,kBAACqG,EAAA,EAAD,CAAK7K,UAAWJ,EAAQV,MACtB,kBAAC4L,EAAA,EAAD,CAAQ9K,UAAWJ,EAAQ4I,QACzB,kBAAC,IAAD,KACE,kBAACvI,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWJ,EAAQ6I,OAA5C,oBAGA,kBAACsC,GAAD,QAGJ,kBAAC7I,EAAA,EAAD,CAAMhJ,WAAS,EAAC8G,UAAWJ,EAAQ8I,cAAerJ,QAAS,EAAG8C,QAAQ,eAAe+C,WAAW,WAC9F,kBAAChD,EAAA,EAAD,CAAMlC,UAAWJ,EAAQgJ,WAAYxD,MAAI,EAACI,GAAI,GAC5C,kBAACwF,EAAA,EAAD,CAAOhL,UAAWJ,EAAQgF,OACxB,kBAAC,EAAD,QAGJ,kBAAC1C,EAAA,EAAD,CAAMlC,UAAWJ,EAAQgJ,WAAYxD,MAAI,EAACI,GAAI,GAC5C,kBAACwF,EAAA,EAAD,CAAOhL,UAAWJ,EAAQgF,OACxB,kBAAC,GAAD,YE5DJ,OAEJxB,SAASC,eAAe,SDUrB,SAAkBgG,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIxF,IAAImH,0BAAwBnS,OAAOmQ,SAASjF,MACpDkH,SAAWpS,OAAOmQ,SAASiC,OAIvC,OAGFpS,OAAOC,iBAAiB,QAAQ,WAC9B,IAAMqQ,EAAK,UAAM6B,0BAAN,sBAEPlC,KAgEV,SAAiCK,EAAOC,GAEtC8B,MAAM/B,EAAO,CACXgC,QAAS,CAAE,iBAAkB,YAE5B3B,MAAK,SAAA4B,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CnC,UAAUC,cAAcmC,MAAMjC,MAAK,SAAAC,GACjCA,EAAaiC,aAAalC,MAAK,WAC7B3Q,OAAOmQ,SAAS2C,eAKpBzC,GAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFA4B,CAAwBzC,EAAOC,GAI/BC,UAAUC,cAAcmC,MAAMjC,MAAK,WACjCO,QAAQC,IACN,iHAMJd,GAAgBC,EAAOC,OChC/BE,K","file":"static/js/main.5211c0a7.chunk.js","sourcesContent":["const initialState = {\r\n    vertices: [],\r\n    edges: [],\r\n    selectedVertex: null,\r\n    canvasPosition: [0, 0]\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_VERTEX':\r\n            const {x, y} = action;\r\n            return {\r\n                ...state,\r\n                vertices:\r\n                    [\r\n                        ...state.vertices, [x, y]\r\n                    ]\r\n            }\r\n        case 'SELECT_VERTEX':\r\n            const { index } = action;\r\n            return {\r\n                ...state,\r\n                selectedVertex: index\r\n            }\r\n        case 'DELETE_VERTEX':\r\n            {\r\n                const {index} = action;\r\n                const {vertices, edges, selectedVertex} = state;\r\n\r\n                return {\r\n                    ...state,\r\n                    vertices: vertices.filter((v, i) => i !== index),\r\n                    edges: edges\r\n                        // Remove all edges containing the vertex\r\n                        .filter(v => v[0] !== index && v[1] !== index)\r\n                        // Transpose all indices above the deleted one\r\n                        .map(\r\n                            v =>\r\n                            [\r\n                                v[0] > index ? v[0] - 1 : v[0],\r\n                                v[1] > index ? v[1] - 1 : v[1]\r\n                            ]\r\n                        ),\r\n                    // If the deleted vertex was the selected one, deselect it\r\n                    // if not, update its value\r\n                    selectedVertex: selectedVertex === index ?\r\n                        null :\r\n                        selectedVertex > index ? selectedVertex - 1 : selectedVertex\r\n                }\r\n            }\r\n        case 'UPDATE_VERTEX':\r\n            {\r\n                const {index, x, y} = action;\r\n                const newVertices = [...state.vertices];\r\n                newVertices[index][0] = x;\r\n                newVertices[index][1] = y;\r\n                return {\r\n                    ...state,\r\n                    vertices: newVertices\r\n                }\r\n            }\r\n        case 'ADD_EDGE':\r\n            let {v1, v2} = action;\r\n            if (state.edges.some(a => a[0]===v1 && a[1]===v2))\r\n                return state;\r\n            else\r\n                return {\r\n                    ...state,\r\n                    edges:\r\n                        [\r\n                            ...state.edges, [v1, v2]\r\n                        ]\r\n                }\r\n        case 'DELETE_EDGE':\r\n            {\r\n                const {index} = action;\r\n                const {edges} = state;\r\n                return {\r\n                    ...state,\r\n                    edges:\r\n                        edges.filter((v, i) => i !== index)\r\n                }\r\n            }\r\n        case 'INITIALIZE_GRAPH':\r\n            return {\r\n                ...state,\r\n                vertices: action.vertices,\r\n                edges: action.edges,\r\n                selectedVertex: null,\r\n                canvasPosition: [0, 0]\r\n            }\r\n        case 'MOVE_CANVAS':\r\n            {\r\n                const {dx, dy} = action;\r\n                const [x, y] = state.canvasPosition;\r\n                return {\r\n                    ...state,\r\n                    canvasPosition: [x + dx, y + dy]\r\n                }\r\n            }\r\n        case 'ZOOM_CANVAS':\r\n            {\r\n                const {x, y, zoom} = action;\r\n                const vertices = [...state.vertices];\r\n                const [cx, cy] = state.canvasPosition;\r\n                return {\r\n                    ...state,\r\n                    vertices: vertices.map( vertex => [\r\n                        (vertex[0] - x + cx) * zoom + x - cx,\r\n                        (vertex[1] - y + cy) * zoom + y - cy\r\n                    ])\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport graphReducer from './graphReducer';\r\n\r\nexport default combineReducers({\r\n    graphReducer\r\n});","import React, { Component } from 'react';\r\nimport { Circle, Group, Text } from 'react-konva';\r\nimport { throttle } from 'lodash';\r\n\r\nclass Vertex extends Component {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.onDrag = this.onDrag.bind(this);\r\n        this.leftClick = this.leftClick.bind(this);\r\n        // used throttle to prevent too many updates\r\n        this.delayedUpdateVertex = throttle((i,x,y) => this.props.updateVertex(i,x,y), 50);\r\n        // prevent this event from reaching stage\r\n        this.dragEnd = e => e.cancelBubble = true;\r\n    }\r\n\r\n    leftClick(){\r\n        const {index, selectedVertex, selectVertex, addEdge} = this.props;\r\n        if (index === selectedVertex)\r\n                selectVertex(null);\r\n            else if (selectedVertex !== null)\r\n                addEdge(selectedVertex, index);\r\n            else\r\n                selectVertex(index);\r\n    }\r\n\r\n    handleClick(e){\r\n        e.cancelBubble = true;\r\n        const {index, deleteVertex} = this.props;\r\n        if (e.evt.button === 0) {\r\n            this.leftClick(e);\r\n        } else if (e.evt.button === 2) {\r\n            deleteVertex(index);\r\n        }\r\n    }\r\n\r\n    onDrag(e){\r\n        this.delayedUpdateVertex(this.props.index, e.target.x(), e.target.y());\r\n    }\r\n\r\n    render() {\r\n        const {x, y, index, selectedVertex} = this.props\r\n        const isSelected = index === selectedVertex;\r\n        return (\r\n            <Group>\r\n                <Text\r\n                    x={x + 8}\r\n                    y={y + 8}\r\n                    text={index + 1}\r\n                    fill={'black'}\r\n                    fontFamily={'ArialBlack'}\r\n                    fontStyle={'bold'}\r\n                />\r\n                <Circle\r\n                    x={x} y={y}\r\n                    radius={isSelected ? 8 : 6}\r\n                    fill={'blue'}\r\n                    stroke={isSelected ? 'LimeGreen' : 'black'}\r\n                    strokeWidth={isSelected ? 4 : 1}\r\n                    onClick={this.handleClick}\r\n                    onTouchStart={this.leftClick}\r\n                    draggable={true}\r\n                    shadowColor={'black'}\r\n                    shadowBlur={isSelected ? 4 : 2}\r\n                    shadowOffset={isSelected ? {x: 2, y: 2 } : {x: 1, y: 1 }}\r\n                    shadowOpacity={0.5}\r\n                    onDragMove={this.onDrag}\r\n                    onDragEnd={this.dragEnd}\r\n                    // Allow click 20 pixels around vertex\r\n                    hitStrokeWidth={20}\r\n                />\r\n            </Group>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default Vertex;","import React, { Component } from 'react';\r\nimport { Line } from 'react-konva';\r\n\r\nclass Edge extends Component {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e){\r\n        const {index, deleteEdge} = this.props;\r\n        // Remove edge on right click\r\n        if (e.evt.button === 2)\r\n            deleteEdge(index);\r\n    }\r\n\r\n    render() {\r\n        const {v1, v2} = this.props;\r\n        return (\r\n            <Line\r\n                points={[v1[0], v1[1], v2[0], v2[1]]}\r\n                stroke={'black'}\r\n                strokeWidth={5}\r\n                onClick={this.handleClick}\r\n                shadowColor={'black'}\r\n                shadowBlur={2}\r\n                shadowOffset={{x: 1, y: 1 }}\r\n                shadowOpacity={0.5}\r\n                // Allow click 20 pixels around edge\r\n                hitStrokeWidth={20}\r\n            />\r\n        )\r\n    }\r\n}\r\n  \r\nexport default Edge;","import React, { Component } from 'react';\r\nimport { Layer, Stage } from 'react-konva';\r\nimport { throttle } from 'lodash';\r\nimport Vertex from './Vertex';\r\nimport Edge from './Edge';\r\nimport { connect } from 'react-redux';\r\nimport { addVertex, deleteVertex, selectVertex, updateVertex, addEdge,\r\n    deleteEdge, moveCanvas, zoomCanvas } from '../actions/graphActions';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nclass GraphCanvas extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dragStartX: 0,\r\n            dragStartY: 0,\r\n            width: 0,\r\n            height: 0,\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.startDrag = this.startDrag.bind(this);\r\n        this.endDrag = this.endDrag.bind(this);\r\n        this.wheelListener = this.wheelListener.bind(this);\r\n        // used throttle to call zoomCanvas only once every 1/10 second\r\n        this.delayedZoomCanvas = throttle((x, y, zoom) => this.props.zoomCanvas(x, y, zoom), 100);\r\n        this.zoomIn = () => this.props.zoomCanvas(\r\n            this.state.width/2,\r\n            this.state.height/2,\r\n            1.5\r\n        );\r\n        this.zoomOut = () => this.props.zoomCanvas(\r\n            this.state.width/2,\r\n            this.state.height/2,\r\n            0.75\r\n        );\r\n        // update stage size \r\n        this.updateSize = this.updateSize.bind(this);\r\n        // used throttle to call updateSize only once every 1/2 second\r\n        this.delayedUpdateSize = throttle(this.updateSize, 500);\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('resize', this.delayedUpdateSize);\r\n        this.updateSize();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener('resize', this.delayedUpdateSize);\r\n    }\r\n\r\n    updateSize(){\r\n        const {width, height} = this.refs.container.getBoundingClientRect();\r\n        this.setState({width, height});\r\n    }\r\n    handleClick(e) {\r\n        const {x: px, y: py} = this.refs.stage.getPointerPosition();\r\n        const [cx, cy] = this.props.canvasPosition;\r\n        // Deselect vertices when any mouse button is clicked in canvas(not on its elements)\r\n        this.props.selectVertex(null);\r\n        // Add vertex if left button is clicked\r\n        if (e.evt.button === 0)\r\n            // The coordinates of the new vertex are the pointer minus the canvas origin coordinates\r\n            this.props.addVertex(px - cx, py - cy);\r\n    }\r\n\r\n    startDrag() {\r\n        const {x, y} = this.refs.stage.getPointerPosition();\r\n        // Keep coordinates of the pointer\r\n        this.setState({dragStartX: x, dragStartY: y});\r\n    }\r\n\r\n    endDrag() {\r\n        const {dragStartX, dragStartY} = this.state;\r\n        const {x, y} = this.refs.stage.getPointerPosition();\r\n        // Find distance of drag\r\n        const dx = x - dragStartX;\r\n        const dy = y - dragStartY;\r\n        // Update store with the new coordinates\r\n        this.props.moveCanvas(dx, dy);\r\n    }\r\n\r\n     wheelListener(e) {\r\n        const {x, y} = this.refs.stage.getPointerPosition();\r\n        e.evt.preventDefault();\r\n        // Zoom in or out by steps of 0.1\r\n        if (e.evt.deltaY > 0)\r\n            this.delayedZoomCanvas(x, y, 1.1);\r\n        else if (e.evt.deltaY < 0)\r\n            this.delayedZoomCanvas(x, y, 0.9);\r\n     }\r\n\r\n    render() {\r\n        const { vertices, edges, selectedVertex, deleteVertex,\r\n            selectVertex, addEdge, deleteEdge, updateVertex, canvasPosition } = this.props;\r\n        return (\r\n            <div ref='container' style={{height: '100%', position: 'relative'}}>\r\n                <span style={{position: 'absolute', bottom: 0, right: 0, cursor: 'pointer', zIndex: 100}}>\r\n                    <Icon onClick={this.zoomIn}>zoom_in</Icon>\r\n                    <Icon onClick={this.zoomOut}>zoom_out</Icon>\r\n                </span>\r\n                <Stage\r\n                    style={{border: \"solid 1px\"}}\r\n                    width={this.state.width - 2}\r\n                    height={this.state.height}\r\n                    onClick={this.handleClick}\r\n                    draggable\r\n                    onDragStart={this.startDrag}\r\n                    onDragEnd={this.endDrag}\r\n                    onWheel={this.wheelListener}\r\n                    x={canvasPosition[0]} y={canvasPosition[1]}\r\n                    ref=\"stage\"\r\n                    // Prevent context menu since we are using right click for deselecting and deleting\r\n                    onContextMenu={(e) => e.evt.preventDefault()}\r\n                >\r\n                    <Layer>\r\n                        {\r\n                            edges.map( (edge, index) =>\r\n                                <Edge\r\n                                    key={index}\r\n                                    index={index}\r\n                                    v1={vertices[edge[0]]}\r\n                                    v2={vertices[edge[1]]}\r\n                                    deleteEdge={deleteEdge}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Layer>\r\n                    <Layer>\r\n                        {\r\n                            vertices.map( (vertice, index) => \r\n                                <Vertex\r\n                                    key={index}\r\n                                    x={vertice[0]}\r\n                                    y={vertice[1]}\r\n                                    index={index}\r\n                                    selectedVertex={selectedVertex}\r\n                                    selectVertex={selectVertex}\r\n                                    addEdge={addEdge}\r\n                                    updateVertex={updateVertex}\r\n                                    deleteVertex={deleteVertex}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Layer>\r\n                </Stage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.graphReducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addVertex: (x,y) => dispatch(addVertex(x,y)),\r\n    deleteVertex: index => dispatch(deleteVertex(index)),\r\n    selectVertex: index => dispatch(selectVertex(index)),\r\n    addEdge: (v1, v2) => dispatch(addEdge(v1, v2)),\r\n    deleteEdge: index => dispatch(deleteEdge(index)),\r\n    updateVertex: (index, x, y) => dispatch(updateVertex(index, x, y)),\r\n    moveCanvas: (dx, dy) => dispatch(moveCanvas(dx, dy)),\r\n    zoomCanvas: (x, y, zoom) => dispatch(zoomCanvas(x, y, zoom))\r\n});\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps) (GraphCanvas);","export const addVertex = (x, y) => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_VERTEX',\r\n        x,\r\n        y\r\n    });\r\n}\r\n\r\nexport const deleteVertex = (index) => dispatch => {\r\n    dispatch({\r\n        type: 'DELETE_VERTEX',\r\n        index\r\n    });\r\n}\r\n\r\nexport const selectVertex = (index) => dispatch => {\r\n    dispatch({\r\n        type: 'SELECT_VERTEX',\r\n        index\r\n    });\r\n}\r\n\r\nexport const updateVertex = (index, x, y) => dispatch => {\r\n    dispatch({\r\n        type: 'UPDATE_VERTEX',\r\n        index,\r\n        x,\r\n        y\r\n    });\r\n}\r\n\r\nexport const addEdge = (v1, v2) => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_EDGE',\r\n        v1,\r\n        v2\r\n    });\r\n}\r\n\r\nexport const deleteEdge = (index) => dispatch => {\r\n    dispatch({\r\n        type: 'DELETE_EDGE',\r\n        index\r\n    });\r\n}\r\n\r\nexport const initializeGraph = (vertices, edges) => dispatch => {\r\n    dispatch({\r\n        type: 'INITIALIZE_GRAPH',\r\n        vertices,\r\n        edges\r\n    });\r\n}\r\n\r\nexport const moveCanvas = (dx, dy) => dispatch => {\r\n    dispatch({\r\n        type: 'MOVE_CANVAS',\r\n        dx,\r\n        dy\r\n    });\r\n}\r\n\r\nexport const zoomCanvas = (x, y, zoom) => dispatch => {\r\n    dispatch({\r\n        type: 'ZOOM_CANVAS',\r\n        x,\r\n        y,\r\n        zoom\r\n    });\r\n}\r\n","import algebra from 'algebra.js';\r\nconst Algebrite = require('algebrite');\r\n\r\nexport const arrayToLatexMatrix = (array) =>\r\n    arrayToTextMatrix(array, '\\\\begin{bmatrix}', '\\\\end{bmatrix}', '&', '\\\\\\\\');\r\n\r\nexport const arrayToTextMatrix = (array, start, end, elSep, lineSep) =>\r\n    `${start}${array.map(row => row.join(elSep)).join(lineSep)}${end}`;\r\n\r\nexport const zeros = (h, w) =>\r\n    Array(h).fill().map(() => Array(w).fill(0));\r\n\r\nexport const adjacencyMatrix = (numberOfVertices, arrayOfEdges) => {\r\n    // Create a new matrix with zeros\r\n    let matrix = zeros(numberOfVertices, numberOfVertices);\r\n    // Put 1 in matrix for every edge\r\n    for (let i=0; i < arrayOfEdges.length; i++) {\r\n        matrix[arrayOfEdges[i][0]][arrayOfEdges[i][1]] = 1;\r\n        matrix[arrayOfEdges[i][1]][arrayOfEdges[i][0]] = 1;\r\n    }\r\n    return matrix;\r\n}\r\n\r\nexport const degreeMatrix = (numberOfVertices, arrayOfEdges) => {\r\n    // Create a new matrix with zeros\r\n    let matrix = zeros(numberOfVertices, numberOfVertices);\r\n    // Put 1 in the diagonal for each vertex of every edge\r\n    for (let i=0; i < arrayOfEdges.length; i++) {\r\n        matrix[arrayOfEdges[i][0]][arrayOfEdges[i][0]] += 1;\r\n        matrix[arrayOfEdges[i][1]][arrayOfEdges[i][1]] += 1;\r\n    }\r\n    return matrix;\r\n}\r\n\r\nexport const laplacianMatrix = (numberOfVertices, arrayOfEdges) => {\r\n    const adj = adjacencyMatrix(numberOfVertices, arrayOfEdges);\r\n    const deg = degreeMatrix(numberOfVertices, arrayOfEdges);\r\n    let laplacianMatrix = [];\r\n    for (let i = 0; i < numberOfVertices; i++) {\r\n        laplacianMatrix[i] = [];\r\n        for (let j = 0; j < numberOfVertices; j++) {\r\n            laplacianMatrix[i][j] = deg[i][j] - adj[i][j];\r\n        }\r\n    }\r\n    return laplacianMatrix;\r\n}\r\n\r\nexport const symNorLaplacianMatrix = (\r\n    numberOfVertices,\r\n    arrayOfEdges,\r\n    expressions = 'approximate'\r\n) => {\r\n    const adj = adjacencyMatrix(numberOfVertices, arrayOfEdges);\r\n    const deg = degreeMatrix(numberOfVertices, arrayOfEdges);\r\n    const simplifiedLatexSqrt = (n) => {\r\n        for (let i = Math.floor(Math.sqrt(n)); i >= 2; i--){\r\n            let r = n/(i*i);\r\n            if(Number.isInteger(r)){\r\n                return `${i}${(r !== 1) ? `\\\\sqrt{${n/(i*i)}}` : ''}`;\r\n            }\r\n        }\r\n        return `\\\\sqrt{${n}}`;\r\n    }\r\n    let SNLMatrix = [];\r\n    for (let i = 0; i < numberOfVertices; i++) {\r\n        SNLMatrix[i] = [];\r\n        for (let j = 0; j < numberOfVertices; j++) {\r\n            if (i === j) {\r\n                SNLMatrix[i][j] = 1;\r\n            } else {\r\n                switch (expressions){\r\n                    case 'latex':\r\n                        SNLMatrix[i][j] = (adj[i][j] !== 0) ?\r\n                            `\\\\frac{${-adj[i][j]}}{${simplifiedLatexSqrt(deg[i][i]*deg[j][j])}}` :\r\n                            0;\r\n                        break;\r\n                    case 'approximate':\r\n                    default:\r\n                        SNLMatrix[i][j] =\r\n                            Math.round(((-adj[i][j])/(Math.sqrt(deg[i][i]*deg[j][j]))) * 100) / 100;\r\n                } \r\n            }\r\n        }\r\n    }\r\n    return SNLMatrix;\r\n}\r\n\r\n//Not used yet\r\nexport const rWNorLaplacianMatrix = (numberOfVertices, arrayOfEdges) => {\r\n    const adj = adjacencyMatrix(numberOfVertices, arrayOfEdges);\r\n    const deg = degreeMatrix(numberOfVertices, arrayOfEdges);\r\n    let rWNLMatrix = [];\r\n    for (let i = 0; i < numberOfVertices; i++) {\r\n        rWNLMatrix[i] = [];\r\n        for (let j = 0; j < numberOfVertices; j++) {\r\n            if (i === j) {\r\n                rWNLMatrix[i][j] = 1;\r\n            } else {\r\n                rWNLMatrix[i][j] = Math.round(((-adj[i][j])/(deg[i][i])) * 100) / 100;\r\n            }\r\n        }\r\n    }\r\n    return rWNLMatrix;\r\n}\r\n\r\nexport const minorMatrix = (array, i, j) => {\r\n    return array\r\n        // Get all the rows leaving out the ith\r\n        .filter((row, index) => index !== i)\r\n        // In each row get all elements leaving out the jth\r\n        .map(row => row.filter((el,index) => index !== j));\r\n}\r\n\r\n// Returns the determinant expression which will be used\r\n// for the computation of the characterestic polynomial\r\nexport const determinantExpressionObject = (array) => {\r\n    if (array.length === 1) {\r\n        // In 1X1 the determinant is the unique element\r\n        return array[0][0];\r\n    } else if (array.length === 2) {\r\n        // In 2X2 the following is the determinant. We will use it as\r\n        // the first step in this recursive method.\r\n        return array[0][0].multiply(array[1][1]).subtract(array[0][1].multiply(array[1][0]));\r\n    }\r\n    let det = new algebra.Expression(0);\r\n    for (let i = 0; i < array.length; i++){\r\n        if (array[0][i].toString() !== '0') {\r\n            let exp = new algebra.Expression(Math.pow(-1, i));\r\n            exp = exp.multiply(array[0][i]);\r\n            exp = exp.multiply(determinantExpressionObject(minorMatrix(array,0,i)));\r\n            det = det.add(exp);\r\n        }\r\n    }\r\n    return det;\r\n}\r\n\r\nexport const determinantExpressionLatex = (array) =>\r\n    algebra.toTex(determinantExpressionObject(array));\r\n\r\nconst countDecimals = function (value) {\r\n    if(Math.floor(value) === value) return 0;\r\n    return value.toString().split(\".\")[1].length || 0; \r\n}\r\nexport const convertArrayToObjectMatrix = (array) => {\r\n    // Convert array to algebra.Expression matrix\r\n    let matrix = [];\r\n    for (let i=0; i < array.length; i++){\r\n        matrix[i] = [];\r\n        for (let j=0; j < array.length; j++) {\r\n            const decimals = countDecimals(array[i][j]);\r\n            matrix[i][j] = new algebra.Expression(array[i][j]*(Math.pow(10, decimals)))\r\n                .divide(Math.pow(10, decimals));\r\n        }\r\n    }\r\n    return matrix;\r\n}\r\n\r\nexport const roundComplex = n => {\r\n    // Function that rounds a number to at most 2 decimal places\r\n    const roundToTwoD = n => Math.round(n * 100) / 100;\r\n    // If the expression contains 'i', it is complex\r\n    if (n.includes('i')){\r\n        // Extract the two numbers of the expression\r\n        const [real, imaginary] = n.match(/[+-]*\\d*\\.?\\d+/g).map(x => roundToTwoD(x));\r\n        // If imaginary is undefined it means that there is no real,\r\n        // and the imaginary is in the first position\r\n        if (imaginary === undefined) return `${real}i`;\r\n        // If imaginary is 0 then just return the real part\r\n        if (imaginary === 0) return real;\r\n        // If the real part is 0 just return the imaginary\r\n        if (real === 0) return `${imaginary}i`;\r\n        // Else return the complex\r\n        return `${real}${imaginary > 0 ? '+' : ''}${imaginary}i`;\r\n    }\r\n    return roundToTwoD(n);\r\n}\r\n\r\nexport const getRootsFromObject = (obj) => {\r\n    // Get the roots of the polynomial\r\n    return Algebrite.run(`nroots(${obj.toString()})`)\r\n        .toString()\r\n        // remove '[', ']' and '...'\r\n        .replace(/(\\[|\\]|\\.\\.\\.)/g, '')\r\n        // split the numbers\r\n        .split(',')\r\n        // and round them\r\n        .map(n => roundComplex(n))\r\n        .sort();\r\n}\r\n\r\nexport const characteristicPolynomialObject = (array) => {\r\n    let matrix = convertArrayToObjectMatrix(array);\r\n    // Subtract t from the diagonal\r\n    for (let i=0; i < matrix.length; i++){\r\n        matrix[i][i] = matrix[i][i].subtract('t');\r\n    }\r\n    return determinantExpressionObject(matrix);\r\n}\r\n\r\nexport const spectrumMatrixLatex = (charObj) => {\r\n    const eigenvalues = getRootsFromObject(charObj);\r\n    const spectrum = [...new Set(eigenvalues)].map(\r\n        x => [x, eigenvalues.filter(y => y === x).length]\r\n      );\r\n    return `Spec\\\\ \\\\Gamma=\\\\begin{pmatrix}${spectrum.map(row => row[0]).join('&')}\\\\\\\\${spectrum.map(row => row[1]).join('&')}\\\\end{pmatrix}`;\r\n}\r\n\r\n// since the computation of the characteristic polynomial is very complex, this function\r\n// will return characteristic polynomial and spectrum at the same time\r\nexport const charAndSpecLatex = (array) => {\r\n    if (array.length === 0) return {\r\n        characteristicPolynomial: '\\\\chi(\\\\Gamma ; \\\\lambda)=0',\r\n        spectrum: 'Spec\\\\ \\\\Gamma=\\\\begin{pmatrix}\\\\\\\\\\\\end{pmatrix}'\r\n    };\r\n    const charPolObj = characteristicPolynomialObject(array);\r\n    return {\r\n        characteristicPolynomial: `\\\\chi(\\\\Gamma ; \\\\lambda)=${algebra.toTex(charPolObj).replace(/t/g, '\\\\lambda')}`,\r\n        spectrum: spectrumMatrixLatex(charPolObj)\r\n    }\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GetApp from '@material-ui/icons/GetApp';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { arrayToTextMatrix, degreeMatrix, laplacianMatrix,\r\n  adjacencyMatrix, symNorLaplacianMatrix } from '../matrix';\r\n \r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    overflow: 'hidden',\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [format, setFormat] = React.useState('space');\r\n  const [expr, setExpr] = React.useState('approx');\r\n  const [newLines, setNewLines] = React.useState(true);\r\n  const [repr, setRepr] = React.useState(props.representation);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const copyText = () => {\r\n    // Get the textarea element\r\n    const textArea = document.getElementById('matrixTextarea');\r\n    // Select text\r\n    textArea.select();\r\n    // Copy text\r\n    document.execCommand(\"copy\");\r\n  }\r\n\r\n  const download = () => {\r\n    // Get the textarea element\r\n    const textArea = document.getElementById('matrixTextarea');\r\n    // Create the blob\r\n    var file = new Blob([textArea.value], {type: 'text/plain'});\r\n    // Create an element that contains the link to the file\r\n    const a = document.createElement('a');\r\n    const url = URL.createObjectURL(file);\r\n    a.href = url;\r\n    a.download = 'matrix.txt';\r\n    document.body.appendChild(a);\r\n    // Trigger download\r\n    a.click();\r\n    // Remove the element\r\n    setTimeout(() => {\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);\r\n    }, 0);\r\n  }\r\n  const {matrix} = props;\r\n    \r\n  let matrixText;\r\n\r\n  switch (format) {\r\n    case 'cBraces':\r\n      matrixText = arrayToTextMatrix(matrix,'{{','}}',', ',`},${newLines ? '\\n' : ''}{`);\r\n      break;\r\n    case 'sBrackets':\r\n      matrixText = arrayToTextMatrix(matrix,'[[',']]',', ',`],${newLines ? '\\n' : ''}[`);\r\n      break;\r\n    case 'matlab':\r\n      matrixText = arrayToTextMatrix(matrix,'[',']',', ',`;${newLines ? '\\n' : ' '}`);\r\n      break;\r\n    case 'latex':\r\n      matrixText = arrayToTextMatrix(matrix, '\\\\begin{bmatrix}', '\\\\end{bmatrix}',\r\n        '&', `\\\\\\\\${newLines ? '\\n' : ' '}`);\r\n      break;\r\n    case 'space': \r\n    default:\r\n      matrixText = arrayToTextMatrix(matrix,'','',' ',newLines ? '\\n' : ' ');\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        onClick={handleClickOpen}\r\n        startIcon={<GetApp />}\r\n      >\r\n        Download matrix\r\n      </Button>\r\n      <Dialog fullScreen onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Download matrix\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid container justify=\"space-around\" style={{maxWidth: 600}}>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"matrix-representation-label\">Representation</InputLabel>\r\n              <Select\r\n                value={repr}\r\n                onChange={e => setRepr(e.target.value)}\r\n                labelId=\"matrix-representation-label\"\r\n              >\r\n                <MenuItem value={'Adjacency'}>Adjacency</MenuItem>\r\n                <MenuItem value={'Degree'}>Degree</MenuItem>\r\n                <MenuItem value={'Laplacian'}>Laplacian</MenuItem>\r\n                <MenuItem value={'SNLaplacian'}>Symmetric Normalized Laplacian</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"matrix-format-label\">Format</InputLabel>\r\n              <Select\r\n                value={format}\r\n                onChange={e => setFormat(e.target.value)}\r\n                labelId=\"matrix-format-label\"\r\n              >\r\n                <MenuItem value={'space'}>Space separated</MenuItem>\r\n                <MenuItem value={'cBraces'}>Curly braces {'{,}'}</MenuItem>\r\n                <MenuItem value={'sBrackets'}>Square brackets {'[,]'}</MenuItem>\r\n                <MenuItem value={'matlab'}>Matlab</MenuItem>\r\n                <MenuItem value={'latex'}>LaTeX</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"expression-label\">Expressions</InputLabel>\r\n              <Select\r\n                value={expr}\r\n                onChange={e => setExpr(e.target.value)}\r\n                labelId=\"expression-label\"\r\n              >\r\n                <MenuItem value={'approx'}>Approximate</MenuItem>\r\n                <MenuItem value={'latex'}>LaTeX</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormControlLabel\r\n                value={newLines}\r\n                control={<Checkbox checked={newLines} color=\"primary\" onChange={e => setNewLines(e.target.checked)}/>}\r\n                label=\"New lines\"\r\n                labelPlacement=\"start\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n            <textarea\r\n                readOnly={true}\r\n                style={{width: '100%', height: '100%', whiteSpace: 'prewrap'}}\r\n                value={matrixText}\r\n                id={'matrixTextarea'}\r\n            />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={copyText} color=\"primary\">\r\n            Copy text to clipboard\r\n          </Button>\r\n          <Button autoFocus onClick={download} color=\"primary\">\r\n            Save matrix to .txt file\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'katex/dist/katex.min.css';\r\nimport { InlineMath } from \"react-katex\";\r\nimport { arrayToLatexMatrix, adjacencyMatrix, degreeMatrix, laplacianMatrix,\r\n    symNorLaplacianMatrix } from '../matrix';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DownloadMatrixComponent from './DownloadMatrixComponent';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    matrixContainer: {\r\n        margin: '16px',\r\n        width: '100%',\r\n        maxHeight: '250px',\r\n        overflow: 'auto',\r\n        '&::-webkit-scrollbar': {\r\n            width: '0.4em',\r\n            height: '0.4em',\r\n        },\r\n        '&::-webkit-scrollbar-track': {\r\n            '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n        },\r\n        '&::-webkit-scrollbar-thumb': {\r\n            backgroundColor: 'rgba(0,0,0,.1)',\r\n            outline: '1px solid slategrey'\r\n        },\r\n    },\r\n}))\r\n\r\nexport default function GraphRepresentation({ matrix, representation, setRepresentation }){\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container alignItems=\"center\" direction=\"column\">\r\n                <Grid item>\r\n                    <Grid container direction={'row'}>\r\n                        <Grid item>\r\n                            <Select\r\n                                value={representation}\r\n                                onChange={e => setRepresentation(e.target.value)}\r\n                                labelId=\"matrix-representation-label\"\r\n                            >\r\n                                <MenuItem value={'Adjacency'}>Adjacency</MenuItem>\r\n                                <MenuItem value={'Degree'}>Degree</MenuItem>\r\n                                <MenuItem value={'Laplacian'}>Laplacian</MenuItem>\r\n                                <MenuItem value={'SNLaplacian'}>Symmetric Normalized Laplacian</MenuItem>\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant='h6'>matrix</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item className={classes.matrixContainer}>\r\n                    <InlineMath math={arrayToLatexMatrix(matrix)}/>\r\n                </Grid>\r\n                <Grid item>\r\n                    <DownloadMatrixComponent\r\n                        matrix={matrix}\r\n                        representation={representation}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'katex/dist/katex.min.css';\r\nimport { InlineMath } from \"react-katex\";\r\nimport { charAndSpecLatex, adjacencyMatrix } from '../matrix';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    latexContainer: {\r\n        margin: '16px',\r\n        width: '100%',\r\n        maxHeight: '250px',\r\n        overflow: 'auto',\r\n    },\r\n}))\r\n\r\nexport default function CharPolAndSpectrum({ matrix }){\r\n    const classes = useStyles();\r\n\r\n    let charAndSpecLatexObj = {};\r\n    if (matrix.length<20){\r\n        charAndSpecLatexObj = charAndSpecLatex(matrix);\r\n    } else {\r\n        charAndSpecLatexObj = {\r\n            characteristicPolynomial: '\\\\text{I will not try to compute the characteristic polynomial.}',\r\n            spectrum: '\\\\text{The computation would take long time in your browser.}'\r\n        };\r\n    }\r\n    let {characteristicPolynomial, spectrum} = charAndSpecLatexObj;\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container alignItems=\"center\" direction=\"column\">\r\n                <Grid item xs>\r\n                    <Typography gutterBottom variant=\"h6\">\r\n                        Characteristic polynomial and spectrum\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item className={classes.latexContainer}>\r\n                    <InlineMath math={characteristicPolynomial}/>\r\n                    <br/>\r\n                    <InlineMath math={spectrum}/>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { adjacencyMatrix, degreeMatrix, laplacianMatrix,\r\n    symNorLaplacianMatrix } from '../matrix';\r\nimport GraphRepresentation from './GraphRepresentation';\r\nimport CharPolAndSpectrum from './CharPolAndSpectrum';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nclass GraphDataPanel extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            representation: 'Adjacency',\r\n        }\r\n        this.setRepresentation = this.setRepresentation.bind(this);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        // The data in this component change only if a vertex or a edge is added or deleted.\r\n        return nextProps.vertices.length !== this.props.vertices.length ||\r\n            nextProps.edges.length !== this.props.edges.length ||\r\n            nextState.representation !== this.state.representation;\r\n    }\r\n\r\n    getMatrixRepresentation(representation, verticesLength, edges, exprStyle){\r\n        let matrix;\r\n        switch(representation) {\r\n            case 'Degree':\r\n                matrix = degreeMatrix(verticesLength, edges);\r\n                break;\r\n            case 'Laplacian':\r\n                matrix = laplacianMatrix(verticesLength, edges);\r\n                break;\r\n            case 'SNLaplacian':\r\n                matrix = symNorLaplacianMatrix(verticesLength, edges, exprStyle);\r\n                break;\r\n            case 'Adjacency':\r\n            default:\r\n                matrix = adjacencyMatrix(verticesLength, edges);\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    setRepresentation(r){\r\n        this.setState({representation: r});\r\n    }\r\n\r\n    render() {\r\n        const {vertices, edges} = this.props;\r\n        const {representation} = this.state;\r\n        return (\r\n            <div>\r\n                <Typography gutterBottom variant=\"h5\">\r\n                    Graph representation\r\n                </Typography>\r\n                <Divider variant=\"middle\" style={{margin: '16px'}} />\r\n                <GraphRepresentation\r\n                    matrix={this.getMatrixRepresentation(representation, vertices.length, edges, 'latex')}\r\n                    representation={this.state.representation}\r\n                    setRepresentation={this.setRepresentation}\r\n                />\r\n                <Divider variant=\"middle\" style={{margin: '16px'}} />\r\n                <CharPolAndSpectrum\r\n                    matrix={this.getMatrixRepresentation(representation, vertices.length, edges, 'approx')}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.graphReducer\r\n});\r\n  \r\nexport default connect(mapStateToProps, null) (GraphDataPanel);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { initializeGraph } from '../actions/graphActions';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\nclass CreateGraphCard extends Component {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.deleteGraph = this.deleteGraph.bind(this);\r\n        this.cycleGraph = this.cycleGraph.bind(this);\r\n        this.completeGraph = this.completeGraph.bind(this);\r\n        this.margulisExpander = this.margulisExpander.bind(this);\r\n    }\r\n\r\n    deleteGraph() {\r\n        this.props.initializeGraph([],[])\r\n    }\r\n\r\n    cycleGraph() {\r\n        const center = [window.innerWidth/4, window.innerHeight/3];\r\n        const radius = window.innerWidth/9;\r\n        let numberOfVertices = Number.parseInt(prompt(\"Please enter the number of vertices\", 5));\r\n        if (!Number.isInteger(numberOfVertices)) numberOfVertices = 5;\r\n        let vertices = [];\r\n        let edges = [];\r\n        for (let i = 0; i < numberOfVertices; i++){\r\n            vertices[i] = [\r\n                center[0]+radius*Math.cos(2*Math.PI*i/numberOfVertices),\r\n                center[1]+radius*Math.sin(2*Math.PI*i/numberOfVertices)\r\n            ];\r\n            edges[i] = [i, (i+1)%numberOfVertices];\r\n        }\r\n        this.props.initializeGraph(vertices,edges);\r\n    }\r\n\r\n    completeGraph() {\r\n        const center = [window.innerWidth/4, window.innerHeight/3];\r\n        const radius = window.innerWidth/9;\r\n        let numberOfVertices = Number.parseInt(prompt(\"Please enter the number of vertices\", 5));\r\n        if (!Number.isInteger(numberOfVertices)) return;\r\n        let vertices = [];\r\n        let edges = [];\r\n        for (let i = 0; i < numberOfVertices; i++){\r\n            vertices[i] = [\r\n                center[0]+radius*Math.cos(2*Math.PI*i/numberOfVertices),\r\n                center[1]+radius*Math.sin(2*Math.PI*i/numberOfVertices)\r\n            ];\r\n        }\r\n        // Fill edges with all possible non-oriented combinations\r\n        for (let i = 0; i < numberOfVertices; i++){\r\n            for (let j = i + 1; j < numberOfVertices; j++){\r\n                edges.push([i,j]);\r\n            }\r\n        }\r\n        this.props.initializeGraph(vertices,edges);\r\n    }\r\n\r\n    margulisExpander() {\r\n        const first = [window.innerWidth/10, window.innerHeight/10];\r\n        let m = Number.parseInt(prompt(\"Please enter a positive number m\", 3));\r\n        const space = window.innerWidth/(3.5*m);\r\n        if (!Number.isInteger(m) && m > 1) return;\r\n        let vertices = [];\r\n        let edges = [];\r\n        const toIndex = (x,y) => x*m+y;\r\n        for (let i = 0; i < m; i++) {\r\n            for (let j = 0; j < m; j++){\r\n                vertices.push([\r\n                    first[0] + space * i + ((Math.pow(j-m/2,2)+j) * 30/m),\r\n                    first[1] + space * j + ((Math.pow(i-m/2,2)+i) * 30/m)\r\n                ]);\r\n                edges.push([toIndex(i,j),toIndex(i,(j+1)%m)]);\r\n                edges.push([toIndex(i,j),toIndex((i+1)%m,j)]);\r\n                edges.push([toIndex(i,j),toIndex(i,(i+j)%m)]);\r\n                edges.push([toIndex(i,j),toIndex(m-j-1, i)]);\r\n            }\r\n        }\r\n        // Remove loops and double edges\r\n        let normalizedEdges = [];\r\n        edges.forEach((edge) => {\r\n            if (!normalizedEdges.some(e =>\r\n                (e[0] === edge[0] && e[1] === edge[1]) ||\r\n                (e[0] === edge[1] && e[1] === edge[0]) ||\r\n                (edge[0] === edge[1])\r\n            )) normalizedEdges.push(edge);\r\n        });\r\n        this.props.initializeGraph(vertices,normalizedEdges);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                    Create\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item onSelect={this.deleteGraph}>New</Dropdown.Item>\r\n                    <Dropdown.Item onSelect={this.cycleGraph}>Cycle Graph</Dropdown.Item>\r\n                    <Dropdown.Item onSelect={this.completeGraph}>Complete Graph</Dropdown.Item>\r\n                    <Dropdown.Item onSelect={this.margulisExpander}>Margulis expander</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.graphReducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    initializeGraph: (vertices, edges) => dispatch(initializeGraph(vertices, edges))\r\n});\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps) (CreateGraphCard);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ToolBar from '@material-ui/core/ToolBar';\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport GraphCanvas from './components/GraphCanvas';\r\nimport GraphDataPanel from './components/GraphDataPanel';\r\nimport OptionsContainer from './components/OptionsContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: '#cfe8fc',\r\n    padding: '16px',\r\n    position: 'fixed',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  appBar: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  gridContainer: {\r\n    height: '100%',\r\n    paddingTop: '66px',\r\n  },\r\n  gridColumn: {\r\n    height: '100%',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    height: '100%',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <AppBar className={classes.appBar}>\r\n        <ToolBar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Graph Playground\r\n          </Typography>\r\n          <OptionsContainer />\r\n        </ToolBar>\r\n      </AppBar>\r\n      <Grid container className={classes.gridContainer} spacing={3} justify=\"space-around\" alignItems=\"stretch\">\r\n        <Grid className={classes.gridColumn} item xs={7}>\r\n          <Paper className={classes.paper}>\r\n            <GraphCanvas/>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid className={classes.gridColumn} item xs={5}>\r\n          <Paper className={classes.paper}>\r\n            <GraphDataPanel />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport default function configureStore() {\r\n    return createStore(\r\n        rootReducer,\r\n        applyMiddleware(thunk)\r\n    );\r\n}"],"sourceRoot":""}