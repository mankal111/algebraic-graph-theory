{"version":3,"sources":["reducers/graphReducer.js","reducers/rootReducer.js","components/Vertex.js","components/Edge.js","components/GraphCanvas.js","actions/graphActions.js","components/VESetsCard.js","matrix.js","components/AdjacencyMatrixCard.js","components/CharPolAndSpecCard.js","components/GraphDataPanel.js","App.js","serviceWorker.js","index.js","store.js"],"names":["initialState","vertices","edges","selectedVertex","combineReducers","graphReducer","state","action","type","x","y","index","filter","v","i","map","newVertices","v1","v2","some","a","Vertex","args","handleClick","bind","onDrag","delayedUpdateVertex","throttle","props","updateVertex","e","cancelBubble","this","selectVertex","deleteVertex","addEdge","evt","button","target","isSelected","text","fill","fontFamily","fontStyle","radius","stroke","strokeWidth","onClick","draggable","shadowColor","shadowBlur","shadowOffset","shadowOpacity","onDragMove","hitStrokeWidth","Component","Edge","deleteEdge","points","GraphCanvas","refs","stage","getPointerPosition","addVertex","width","window","innerWidth","height","innerHeight","ref","onContextMenu","preventDefault","edge","key","vertice","connect","dispatch","VESetsCard","useState","open","setOpen","Card","Header","aria-controls","aria-expanded","Collapse","in","Body","id","math","length","Algebrite","require","arrayToLatexMatrix","array","row","join","adjacencyMatrix","numberOfVertices","arrayOfEdges","w","matrix","Array","minorMatrix","j","el","determinantExpressionObject","multiply","subtract","det","algebra","Expression","toString","exp","Math","pow","add","getRootsFromObject","obj","run","replace","split","n","roundToTwoD","round","includes","match","real","imaginary","undefined","roundComplex","sort","characteristicPolynomialObject","convertArrayToObjectMatrix","spectrumMatrixLatex","charObj","eigenvalues","spectrum","Set","charAndSpecLatex","characteristicPolynomial","charPolObj","toTex","AdjacencyMatrixCard","latexAdjMatrix","CharPolAndSpecCard","adjMatrix","GraphDataPanel","nextProps","App","className","Container","fluid","Row","Col","md","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","store","createStore","rootReducer","applyMiddleware","thunk","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.311b40db.chunk.js","sourcesContent":["const initialState = {\r\n    vertices: [],\r\n    edges: [],\r\n    selectedVertex: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_VERTEX':\r\n            const {x, y} = action;\r\n            return {\r\n                ...state,\r\n                vertices:\r\n                    [\r\n                        ...state.vertices, [x, y]\r\n                    ]\r\n            }\r\n        case 'SELECT_VERTEX':\r\n            const { index } = action;\r\n            return {\r\n                ...state,\r\n                selectedVertex: index\r\n            }\r\n        case 'DELETE_VERTEX':\r\n            {\r\n                const {index} = action;\r\n                const {vertices, edges, selectedVertex} = state;\r\n\r\n                return {\r\n                    ...state,\r\n                    vertices: vertices.filter((v, i) => i !== index),\r\n                    edges: edges\r\n                        // Remove all edges containing the vertex\r\n                        .filter(v => v[0] !== index && v[1] !== index)\r\n                        // Transpose all indices above the deleted one\r\n                        .map(\r\n                            v =>\r\n                            [\r\n                                v[0] > index ? v[0] - 1 : v[0],\r\n                                v[1] > index ? v[1] - 1 : v[1]\r\n                            ]\r\n                        ),\r\n                    // If the deleted vertex was the selected one, deselect it\r\n                    // if not, update its value\r\n                    selectedVertex: selectedVertex === index ?\r\n                        null :\r\n                        selectedVertex > index ? selectedVertex - 1 : selectedVertex\r\n                }\r\n            }\r\n        case 'UPDATE_VERTEX':\r\n            {\r\n                const {index, x, y} = action;\r\n                const newVertices = [...state.vertices];\r\n                newVertices[index][0] = x;\r\n                newVertices[index][1] = y;\r\n                return {\r\n                    ...state,\r\n                    vertices: newVertices\r\n                }\r\n            }\r\n        case 'ADD_EDGE':\r\n            let {v1, v2} = action;\r\n            if (state.edges.some(a => a[0]===v1 && a[1]===v2))\r\n                return state;\r\n            else\r\n                return {\r\n                    ...state,\r\n                    edges:\r\n                        [\r\n                            ...state.edges, [v1, v2]\r\n                        ]\r\n                }\r\n        case 'DELETE_EDGE':\r\n            {\r\n                const {index} = action;\r\n                const {edges} = state;\r\n                return {\r\n                    ...state,\r\n                    edges:\r\n                        edges.filter((v, i) => i !== index)\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport graphReducer from './graphReducer';\r\n\r\nexport default combineReducers({\r\n    graphReducer\r\n});","import React, { Component } from 'react';\r\nimport { Circle, Group, Text } from 'react-konva';\r\nimport { throttle } from 'lodash';\r\n\r\nclass Vertex extends Component {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.onDrag = this.onDrag.bind(this);\r\n        // used throttle to prevent too many updates\r\n        this.delayedUpdateVertex = throttle((i,x,y) => this.props.updateVertex(i,x,y), 50);\r\n    }\r\n\r\n    handleClick(e){\r\n        e.cancelBubble = true;\r\n        const {index, selectedVertex, selectVertex, deleteVertex, addEdge} = this.props;\r\n        if (e.evt.button === 0) {\r\n            if (index === selectedVertex)\r\n                selectVertex(null);\r\n            else if (selectedVertex !== null)\r\n                addEdge(selectedVertex, index);\r\n            else\r\n                selectVertex(index);\r\n        } else if (e.evt.button === 2) {\r\n            deleteVertex(index);\r\n        }\r\n    }\r\n\r\n    onDrag(e){\r\n        this.delayedUpdateVertex(this.props.index, e.target.x(), e.target.y());\r\n    }\r\n\r\n    render() {\r\n        const {x, y, index, selectedVertex} = this.props\r\n        const isSelected = index === selectedVertex;\r\n        return (\r\n            <Group>\r\n                <Text\r\n                    x={x + 8}\r\n                    y={y + 8}\r\n                    text={index + 1}\r\n                    fill={'black'}\r\n                    fontFamily={'ArialBlack'}\r\n                    fontStyle={'bold'}\r\n                />\r\n                <Circle\r\n                    x={x} y={y}\r\n                    radius={isSelected ? 8 : 6}\r\n                    fill={'blue'}\r\n                    stroke={isSelected ? 'LimeGreen' : 'black'}\r\n                    strokeWidth={isSelected ? 4 : 1}\r\n                    onClick={this.handleClick}\r\n                    draggable={true}\r\n                    shadowColor={'black'}\r\n                    shadowBlur={isSelected ? 4 : 2}\r\n                    shadowOffset={isSelected ? {x: 2, y: 2 } : {x: 1, y: 1 }}\r\n                    shadowOpacity={0.5}\r\n                    onDragMove={this.onDrag}\r\n                    // Allow click 20 pixels around vertex\r\n                    hitStrokeWidth={20}\r\n                />\r\n            </Group>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default Vertex;","import React, { Component } from 'react';\r\nimport { Line } from 'react-konva';\r\n\r\nclass Edge extends Component {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e){\r\n        const {index, deleteEdge} = this.props;\r\n        // Remove edge on right click\r\n        if (e.evt.button === 2)\r\n            deleteEdge(index);\r\n    }\r\n\r\n    render() {\r\n        const {v1, v2} = this.props;\r\n        return (\r\n            <Line\r\n                points={[v1[0], v1[1], v2[0], v2[1]]}\r\n                stroke={'black'}\r\n                strokeWidth={5}\r\n                onClick={this.handleClick}\r\n                shadowColor={'black'}\r\n                shadowBlur={2}\r\n                shadowOffset={{x: 1, y: 1 }}\r\n                shadowOpacity={0.5}\r\n                // Allow click 20 pixels around edge\r\n                hitStrokeWidth={20}\r\n            />\r\n        )\r\n    }\r\n}\r\n  \r\nexport default Edge;","import React, { Component } from 'react';\r\nimport { Layer, Stage } from 'react-konva';\r\nimport Vertex from './Vertex';\r\nimport Edge from './Edge';\r\nimport { connect } from 'react-redux';\r\nimport { addVertex, deleteVertex, selectVertex, updateVertex, addEdge, deleteEdge } from '../actions/graphActions';\r\n\r\nclass GraphCanvas extends Component {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        var {x, y} = this.refs.stage.getPointerPosition();\r\n        // Deselect vertices when any mouse button is clicked in canvas(not on its elements)\r\n        this.props.selectVertex(null);\r\n        // Add vertex if left button is clicked\r\n        if (e.evt.button === 0)\r\n            this.props.addVertex(x, y);\r\n    }\r\n\r\n    render() {\r\n        const { vertices, edges, selectedVertex, deleteVertex,\r\n            selectVertex, addEdge, deleteEdge, updateVertex } = this.props;\r\n        return (\r\n            <Stage \r\n                width={window.innerWidth}\r\n                height={window.innerHeight}\r\n                onClick={this.handleClick}\r\n                ref=\"stage\"\r\n                // Prevent context menu since we are using right click for deselecting and deleting\r\n                onContextMenu={(e) => e.evt.preventDefault()}\r\n            >\r\n                <Layer>\r\n                    {\r\n                        edges.map( (edge, index) =>\r\n                            <Edge\r\n                                key={index}\r\n                                index={index}\r\n                                v1={vertices[edge[0]]}\r\n                                v2={vertices[edge[1]]}\r\n                                deleteEdge={deleteEdge}\r\n                            />\r\n                        )\r\n                    }\r\n                </Layer>\r\n                <Layer>\r\n                    {\r\n                        vertices.map( (vertice, index) => \r\n                            <Vertex\r\n                                key={index}\r\n                                x={vertice[0]}\r\n                                y={vertice[1]}\r\n                                index={index}\r\n                                selectedVertex={selectedVertex}\r\n                                selectVertex={selectVertex}\r\n                                addEdge={addEdge}\r\n                                updateVertex={updateVertex}\r\n                                deleteVertex={deleteVertex}\r\n                            />\r\n                        )\r\n                    }\r\n                </Layer>\r\n            </Stage>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.graphReducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addVertex: (x,y) => dispatch(addVertex(x,y)),\r\n    deleteVertex: index => dispatch(deleteVertex(index)),\r\n    selectVertex: index => dispatch(selectVertex(index)),\r\n    addEdge: (v1, v2) => dispatch(addEdge(v1, v2)),\r\n    deleteEdge: index => dispatch(deleteEdge(index)),\r\n    updateVertex: (index, x, y) => dispatch(updateVertex(index, x, y))\r\n});\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps) (GraphCanvas);","export const addVertex = (x, y) => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_VERTEX',\r\n        x,\r\n        y\r\n    });\r\n}\r\n\r\nexport const deleteVertex = (index) => dispatch => {\r\n    dispatch({\r\n        type: 'DELETE_VERTEX',\r\n        index\r\n    });\r\n}\r\n\r\nexport const selectVertex = (index) => dispatch => {\r\n    dispatch({\r\n        type: 'SELECT_VERTEX',\r\n        index\r\n    });\r\n}\r\n\r\nexport const updateVertex = (index, x, y) => dispatch => {\r\n    dispatch({\r\n        type: 'UPDATE_VERTEX',\r\n        index,\r\n        x,\r\n        y\r\n    });\r\n}\r\n\r\nexport const addEdge = (v1, v2) => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_EDGE',\r\n        v1,\r\n        v2\r\n    });\r\n}\r\n\r\nexport const deleteEdge = (index) => dispatch => {\r\n    dispatch({\r\n        type: 'DELETE_EDGE',\r\n        index\r\n    });\r\n}\r\n","import React, { useState } from 'react';\r\nimport 'katex/dist/katex.min.css';\r\nimport {InlineMath} from \"react-katex\";\r\nimport { Card, Collapse } from 'react-bootstrap';\r\n\r\nexport default function VESetsCard({ vertices, edges }){\r\n    const [open, setOpen] = useState(true);\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Header\r\n                onClick={() => setOpen(!open)}\r\n                aria-controls=\"VAndESets\"\r\n                aria-expanded={open}\r\n            >\r\n                Vertex and Edge sets\r\n            </Card.Header>\r\n            <Collapse in={open}>\r\n                <Card.Body id=\"VAndESets\">\r\n                    <InlineMath math={`V\\\\Gamma=\\\\{`}/>\r\n                    {vertices.map((v,i) => <InlineMath key={i} math={`v_{${i+1}}${i<vertices.length-1?',':''}`}/>)}\r\n                    <InlineMath math={`\\\\}`} />\r\n                    <br/>\r\n                    <InlineMath math={`E\\\\Gamma=\\\\{`}/>\r\n                    {edges.map((v,i) => <InlineMath key={i} math={`\\\\{v_{${v[0]+1}}, v_{${v[1]+1}}\\\\}${i<edges.length-1?',':''}`}/>)}\r\n                    <InlineMath math={`\\\\}`} />\r\n                </Card.Body>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n}","import algebra from 'algebra.js';\r\nconst Algebrite = require('algebrite');\r\n\r\nexport const arrayToLatexMatrix = (array) =>\r\n    `A(\\\\Gamma)=\\\\begin{bmatrix}${array.map(row => row.join('&')).join('\\\\\\\\')}\\\\end{bmatrix}`;\r\n\r\nexport const zeros = (h, w) =>\r\n    Array(h).fill().map(() => Array(w).fill(0));\r\n\r\nexport const adjacencyMatrix = (numberOfVertices, arrayOfEdges) => {\r\n    // Create a new matrix with zeros\r\n    let matrix = zeros(numberOfVertices, numberOfVertices);\r\n    // Put 1 in matrix for every edge\r\n    for (let i=0; i < arrayOfEdges.length; i++) {\r\n        matrix[arrayOfEdges[i][0]][arrayOfEdges[i][1]] = 1;\r\n        matrix[arrayOfEdges[i][1]][arrayOfEdges[i][0]] = 1;\r\n    }\r\n    return matrix;\r\n}\r\n\r\nexport const minorMatrix = (array, i, j) => {\r\n    return array\r\n        // Get all the rows leaving out the ith\r\n        .filter((row, index) => index !== i)\r\n        // In each row get all elements leaving out the jth\r\n        .map(row => row.filter((el,index) => index !== j));\r\n}\r\n\r\n// Returns the determinant expression which will be used\r\n// for the computation of the characterestic polynomial\r\nexport const determinantExpressionObject = (array) => {\r\n    if (array.length === 1) {\r\n        // In 1X1 the determinant is the unique element\r\n        return array[0][0];\r\n    } else if (array.length === 2) {\r\n        // In 2X2 the following is the determinant. We will use it as\r\n        // the first step in this recursive method.\r\n        return array[0][0].multiply(array[1][1]).subtract(array[0][1].multiply(array[1][0]));\r\n    }\r\n    let det = new algebra.Expression(0);\r\n    for (let i = 0; i < array.length; i++){\r\n        if (array[0][i].toString() !== '0') {\r\n            let exp = new algebra.Expression(Math.pow(-1, i));\r\n            exp = exp.multiply(array[0][i]);\r\n            exp = exp.multiply(determinantExpressionObject(minorMatrix(array,0,i)));\r\n            det = det.add(exp);\r\n        }\r\n    }\r\n    return det;\r\n}\r\n\r\nexport const determinantExpressionLatex = (array) =>\r\n    algebra.toTex(determinantExpressionObject(array));\r\n\r\nexport const convertArrayToObjectMatrix = (array) => {\r\n    // Convert array to algebra.Expression matrix\r\n    let matrix = [];\r\n    for (let i=0; i < array.length; i++){\r\n        matrix[i] = [];\r\n        for (let j=0; j < array.length; j++) {\r\n            matrix[i][j] = new algebra.Expression(array[i][j]);\r\n        }\r\n    }\r\n    return matrix;\r\n}\r\n\r\nexport const roundComplex = n => {\r\n    // Function that rounds a number to at most 2 decimal places\r\n    const roundToTwoD = n => Math.round(n * 100) / 100;\r\n    // If the expression contains 'i', it is complex\r\n    if (n.includes('i')){\r\n        // Extract the two numbers of the expression\r\n        const [real, imaginary] = n.match(/[+-]*\\d*\\.?\\d+/g).map(x => roundToTwoD(x));\r\n        // If imaginary is undefined it means that there is no real,\r\n        // and the imaginary is in the first position\r\n        if (imaginary === undefined) return `${real}i`;\r\n        // If imaginary is 0 then just return the real part\r\n        if (imaginary === 0) return real;\r\n        // If the real part is 0 just return the imaginary\r\n        if (real === 0) return `${imaginary}i`;\r\n        // Else return the complex\r\n        return `${real}${imaginary > 0 ? '+' : ''}${imaginary}i`;\r\n    }\r\n    return roundToTwoD(n);\r\n}\r\n\r\nexport const getRootsFromObject = (obj) => {\r\n    // Get the roots of the polynomial\r\n    return Algebrite.run(`nroots(${obj.toString()})`)\r\n        .toString()\r\n        // remove '[', ']' and '...'\r\n        .replace(/(\\[|\\]|\\.\\.\\.)/g, '')\r\n        // split the numbers\r\n        .split(',')\r\n        // and round them\r\n        .map(n => roundComplex(n))\r\n        .sort();\r\n}\r\n\r\nexport const characteristicPolynomialObject = (array) => {\r\n    let matrix = convertArrayToObjectMatrix(array);\r\n    // Subtract t from the diagonal\r\n    for (let i=0; i < matrix.length; i++){\r\n        matrix[i][i] = matrix[i][i].subtract('t');\r\n    }\r\n    return determinantExpressionObject(matrix);\r\n}\r\n\r\nexport const spectrumMatrixLatex = (charObj) => {\r\n    const eigenvalues = getRootsFromObject(charObj);\r\n    const spectrum = [...new Set(eigenvalues)].map(\r\n        x => [x, eigenvalues.filter(y => y === x).length]\r\n      );\r\n    return `Spec\\\\ \\\\Gamma=\\\\begin{pmatrix}${spectrum.map(row => row[0]).join('&')}\\\\\\\\${spectrum.map(row => row[1]).join('&')}\\\\end{pmatrix}`;\r\n}\r\n\r\n// since the computation of the characteristic polynomial is very complex, this function\r\n// will return characteristic polynomial and spectrum at the same time\r\nexport const charAndSpecLatex = (array) => {\r\n    if (array.length === 0) return {\r\n        characteristicPolynomial: '\\\\chi(\\\\Gamma ; \\\\lambda)=0',\r\n        spectrum: 'Spec\\\\ \\\\Gamma=\\\\begin{pmatrix}\\\\\\\\\\\\end{pmatrix}'\r\n    };\r\n    const charPolObj = characteristicPolynomialObject(array);\r\n    return {\r\n        characteristicPolynomial: `\\\\chi(\\\\Gamma ; \\\\lambda)=${algebra.toTex(charPolObj).replace(/t/g, '\\\\lambda')}`,\r\n        spectrum: spectrumMatrixLatex(charPolObj)\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport 'katex/dist/katex.min.css';\r\nimport { InlineMath } from \"react-katex\";\r\nimport { Card, Collapse } from 'react-bootstrap';\r\nimport { arrayToLatexMatrix, adjacencyMatrix } from '../matrix';\r\n\r\nexport default function AdjacencyMatrixCard({ vertices, edges }){\r\n    const [open, setOpen] = useState(true);\r\n    // Create the latex text that describes the adjacencyMatrix\r\n    let latexAdjMatrix = arrayToLatexMatrix(adjacencyMatrix(vertices.length, edges));\r\n    return (\r\n        <Card>\r\n            <Card.Header\r\n                onClick={() => setOpen(!open)}\r\n                aria-controls=\"AdjMatrix\"\r\n                aria-expanded={open}\r\n            >\r\n                Adjacency Matrix\r\n            </Card.Header>\r\n            <Collapse in={open}>\r\n                <Card.Body id=\"AdjMatrix\">\r\n                <InlineMath math={latexAdjMatrix}/>\r\n                </Card.Body>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport 'katex/dist/katex.min.css';\r\nimport { InlineMath } from \"react-katex\";\r\nimport { Card, Collapse } from 'react-bootstrap';\r\nimport { charAndSpecLatex, adjacencyMatrix } from '../matrix';\r\n\r\nexport default function CharPolAndSpecCard({ vertices, edges }){\r\n    const [open, setOpen] = useState(true);\r\n    // Create the latex text that describes the adjacencyMatrix\r\n    let adjMatrix = adjacencyMatrix(vertices.length, edges);\r\n    let { characteristicPolynomial, spectrum } = charAndSpecLatex(adjMatrix);\r\n    return (\r\n        <Card>\r\n            <Card.Header\r\n                onClick={() => setOpen(!open)}\r\n                aria-controls=\"CPASC\"\r\n                aria-expanded={open}\r\n            >\r\n                Characteristic polynomial and spectrum\r\n            </Card.Header>\r\n            <Collapse in={open}>\r\n                <Card.Body id=\"CPASC\">\r\n                <InlineMath math={characteristicPolynomial}/>\r\n                <br/>\r\n                <InlineMath math={spectrum}/>\r\n                </Card.Body>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport VESetsCard from './VESetsCard';\r\nimport AdjacencyMatrixCard from './AdjacencyMatrixCard';\r\nimport CharPolAndSpecCard from './CharPolAndSpecCard';\r\n\r\nclass GraphDataPanel extends Component {\r\n    shouldComponentUpdate(nextProps){\r\n        // The data in this component change only if a vertex or a edge is added or deleted.\r\n        return nextProps.vertices.length !== this.props.vertices.length ||\r\n            nextProps.edges.length !== this.props.edges.length;\r\n    }\r\n\r\n    render() {\r\n        const {vertices, edges} = this.props;\r\n        return (\r\n            <div>\r\n                <VESetsCard vertices={vertices} edges={edges} />\r\n                <AdjacencyMatrixCard vertices={vertices} edges={edges} />\r\n                <CharPolAndSpecCard vertices={vertices} edges={edges} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.graphReducer\r\n});\r\n  \r\nexport default connect(mapStateToProps, null) (GraphDataPanel);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport GraphCanvas from './components/GraphCanvas';\r\nimport GraphDataPanel from './components/GraphDataPanel.js';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Container fluid>\r\n              <h1>Algebraic Graph Theory</h1>\r\n          <Row>\r\n            <Col md={7}>\r\n              <GraphCanvas/>\r\n            </Col>\r\n            <Col md={5}>\r\n              <GraphDataPanel />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  \r\n}\r\n\r\nexport default connect() (App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport default function configureStore() {\r\n    return createStore(\r\n        rootReducer,\r\n        applyMiddleware(thunk)\r\n    );\r\n}"],"sourceRoot":""}